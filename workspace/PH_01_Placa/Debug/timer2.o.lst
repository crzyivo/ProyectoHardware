   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer2.c"
  21              	.Ltext0:
  22              		.file 1 "../timer2.c"
 1880              		.align	2
 1881              		.global	timer2_ISR
 1883              	timer2_ISR:
 1884              	.LFB0:
   1:../timer2.c   **** /*********************************************************************************************
   2:../timer2.c   **** * Fichero:		timer2.c
   3:../timer2.c   **** * Autores:		Yasmina Albero e Iván Escuín
   4:../timer2.c   **** * Descrip:		funciones de control del timer2 del s3c44b0x
   5:../timer2.c   **** * Version: 1.0
   6:../timer2.c   **** *********************************************************************************************/
   7:../timer2.c   **** 
   8:../timer2.c   **** /*--- ficheros de cabecera ---*/
   9:../timer2.c   **** #include "timer2.h"
  10:../timer2.c   **** #include "44b.h"
  11:../timer2.c   **** #include "44blib.h"
  12:../timer2.c   **** 
  13:../timer2.c   **** /*--- variables globales ---*/
  14:../timer2.c   **** volatile unsigned int timer2_num_int;
  15:../timer2.c   **** 
  16:../timer2.c   **** /* declaración de función que es rutina de servicio de interrupción
  17:../timer2.c   ****  * https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  18:../timer2.c   **** void timer2_ISR(void) __attribute__((interrupt("IRQ")));
  19:../timer2.c   **** 
  20:../timer2.c   **** /*--- codigo de las funciones ---*/
  21:../timer2.c   **** /* Rutina de servicio de interrupción para timer2 */
  22:../timer2.c   **** void timer2_ISR(void)
  23:../timer2.c   **** {
 1885              		.loc 1 23 0
 1886              		.cfi_startproc
 1887              		@ Interrupt Service Routine.
 1888              		@ args = 0, pretend = 0, frame = 0
 1889              		@ frame_needed = 1, uses_anonymous_args = 0
 1890 0000 04C02DE5 		str	ip, [sp, #-4]!
 1891 0004 0DC0A0E1 		mov	ip, sp
 1892              	.LCFI0:
 1893              		.cfi_def_cfa_register 12
 1894 0008 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 1895 000c 04B04CE2 		sub	fp, ip, #4
 1896              		.cfi_offset 14, -8
 1897              		.cfi_offset 13, -12
 1898              		.cfi_offset 11, -16
 1899              		.cfi_offset 3, -20
 1900              		.cfi_offset 2, -24
 1901              	.LCFI1:
 1902              		.cfi_def_cfa 11, 4
  24:../timer2.c   **** 	timer2_num_int++;
 1903              		.loc 1 24 0
 1904 0010 30309FE5 		ldr	r3, .L2
 1905 0014 003093E5 		ldr	r3, [r3, #0]
 1906 0018 012083E2 		add	r2, r3, #1
 1907 001c 24309FE5 		ldr	r3, .L2
 1908 0020 002083E5 		str	r2, [r3, #0]
  25:../timer2.c   **** 
  26:../timer2.c   **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  27:../timer2.c   **** 	rI_ISPC |= BIT_TIMER2; // BIT_TIMER2 está definido en 44b.h y pone un uno en el bit 11 que correpo
 1909              		.loc 1 27 0
 1910 0024 20309FE5 		ldr	r3, .L2+4
 1911 0028 1C209FE5 		ldr	r2, .L2+4
 1912 002c 002092E5 		ldr	r2, [r2, #0]
 1913 0030 022B82E3 		orr	r2, r2, #2048
 1914 0034 002083E5 		str	r2, [r3, #0]
  28:../timer2.c   **** }
 1915              		.loc 1 28 0
 1916 0038 14D04BE2 		sub	sp, fp, #20
 1917 003c 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 1918 0040 04C09DE4 		ldmfd	sp!, {ip}
 1919 0044 04F05EE2 		subs	pc, lr, #4
 1920              	.L3:
 1921              		.align	2
 1922              	.L2:
 1923 0048 00000000 		.word	timer2_num_int
 1924 004c 2400E001 		.word	31457316
 1925              		.cfi_endproc
 1926              	.LFE0:
 1928              		.align	2
 1929              		.global	timer2_inicializar
 1931              	timer2_inicializar:
 1932              	.LFB1:
  29:../timer2.c   **** 
  30:../timer2.c   **** /* Función que inicializa el timer2, dejandolo listo para empezar la cuenta con timer2_empezar() */
  31:../timer2.c   **** void timer2_inicializar(void)
  32:../timer2.c   **** {
 1933              		.loc 1 32 0
 1934              		.cfi_startproc
 1935              		@ Function supports interworking.
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938 0050 0DC0A0E1 		mov	ip, sp
 1939              	.LCFI2:
 1940              		.cfi_def_cfa_register 12
 1941 0054 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1942 0058 04B04CE2 		sub	fp, ip, #4
 1943              		.cfi_offset 14, -8
 1944              		.cfi_offset 13, -12
 1945              		.cfi_offset 11, -16
 1946              	.LCFI3:
 1947              		.cfi_def_cfa 11, 4
  33:../timer2.c   **** #ifndef EMU
  34:../timer2.c   **** 	/* Configuraion controlador de interrupciones */
  35:../timer2.c   **** 	rINTMOD = 0x0; // Configura las linas como de tipo IRQ
 1948              		.loc 1 35 0
 1949 005c 88309FE5 		ldr	r3, .L5
 1950 0060 0020A0E3 		mov	r2, #0
 1951 0064 002083E5 		str	r2, [r3, #0]
  36:../timer2.c   **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)
 1952              		.loc 1 36 0
 1953 0068 1E36A0E3 		mov	r3, #31457280
 1954 006c 0120A0E3 		mov	r2, #1
 1955 0070 002083E5 		str	r2, [r3, #0]
  37:../timer2.c   **** 	rINTMSK &= ~(BIT_TIMER2); // habilitamos en vector de mascaras de interrupcion el Timer2 (bits 26 
 1956              		.loc 1 37 0
 1957 0074 74309FE5 		ldr	r3, .L5+4
 1958 0078 70209FE5 		ldr	r2, .L5+4
 1959 007c 002092E5 		ldr	r2, [r2, #0]
 1960 0080 022BC2E3 		bic	r2, r2, #2048
 1961 0084 002083E5 		str	r2, [r3, #0]
  38:../timer2.c   **** 
  39:../timer2.c   **** 	/* Establece la rutina de servicio para TIMER2 */
  40:../timer2.c   **** 	pISR_TIMER2 = (unsigned) timer2_ISR;
 1962              		.loc 1 40 0
 1963 0088 64309FE5 		ldr	r3, .L5+8
 1964 008c 64209FE5 		ldr	r2, .L5+12
 1965 0090 002083E5 		str	r2, [r3, #0]
  41:../timer2.c   **** 
  42:../timer2.c   **** 	/* Configura el Timer2 */
  43:../timer2.c   **** 	rTCFG0 = rTCFG0 & 0xffff00ff; // Preescalado del timer2 en bits [15:8] de TCFG0. Dividimos entre 1
 1966              		.loc 1 43 0
 1967 0094 60309FE5 		ldr	r3, .L5+16
 1968 0098 5C209FE5 		ldr	r2, .L5+16
 1969 009c 002092E5 		ldr	r2, [r2, #0]
 1970 00a0 FF2CC2E3 		bic	r2, r2, #65280
 1971 00a4 002083E5 		str	r2, [r3, #0]
  44:../timer2.c   **** 
  45:../timer2.c   **** 	/*****************************************
  46:../timer2.c   **** 	 * Bits de seleccion del MUX timer 2:	 *
  47:../timer2.c   **** 	 * 1/2 -> 0000	1/4-> 0001				 *
  48:../timer2.c   **** 	 * 1/8 -> 0010	1/16-> 0011	1/32 -> 0100 *
  49:../timer2.c   **** 	 *****************************************/
  50:../timer2.c   **** 	rTCFG1 = rTCFG1 & 0xfffff0ff; // Selección del mux para el divisor de frecuencia, bits [11:8] para
 1972              		.loc 1 50 0
 1973 00a8 50309FE5 		ldr	r3, .L5+20
 1974 00ac 4C209FE5 		ldr	r2, .L5+20
 1975 00b0 002092E5 		ldr	r2, [r2, #0]
 1976 00b4 0F2CC2E3 		bic	r2, r2, #3840
 1977 00b8 002083E5 		str	r2, [r3, #0]
  51:../timer2.c   **** 	rTCNTB2 = 65535;// valor inicial de cuenta (la cuenta es descendente)
 1978              		.loc 1 51 0
 1979 00bc 40309FE5 		ldr	r3, .L5+24
 1980 00c0 40209FE5 		ldr	r2, .L5+28
 1981 00c4 002083E5 		str	r2, [r3, #0]
  52:../timer2.c   **** 	rTCMPB2 = 0 ;// valor de comparación (valor original 12800)
 1982              		.loc 1 52 0
 1983 00c8 3C309FE5 		ldr	r3, .L5+32
 1984 00cc 0020A0E3 		mov	r2, #0
 1985 00d0 002083E5 		str	r2, [r3, #0]
  53:../timer2.c   **** 	//Timer control register, para timer2 bits [15:12] -> [15] auto-reload, [14] output inverter, [13]
  54:../timer2.c   **** 	/* establecer update=manual (bit 13), inverter=off (0 en bit 14)*/
  55:../timer2.c   **** 	rTCON = 0x00002000;
 1986              		.loc 1 55 0
 1987 00d4 34309FE5 		ldr	r3, .L5+36
 1988 00d8 022AA0E3 		mov	r2, #8192
 1989 00dc 002083E5 		str	r2, [r3, #0]
  56:../timer2.c   **** #endif
  57:../timer2.c   **** }
 1990              		.loc 1 57 0
 1991 00e0 0CD04BE2 		sub	sp, fp, #12
 1992 00e4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1993 00e8 1EFF2FE1 		bx	lr
 1994              	.L6:
 1995              		.align	2
 1996              	.L5:
 1997 00ec 0800E001 		.word	31457288
 1998 00f0 0C00E001 		.word	31457292
 1999 00f4 4CFF7F0C 		.word	209715020
 2000 00f8 00000000 		.word	timer2_ISR
 2001 00fc 0000D501 		.word	30736384
 2002 0100 0400D501 		.word	30736388
 2003 0104 2400D501 		.word	30736420
 2004 0108 FFFF0000 		.word	65535
 2005 010c 2800D501 		.word	30736424
 2006 0110 0800D501 		.word	30736392
 2007              		.cfi_endproc
 2008              	.LFE1:
 2010              		.align	2
 2011              		.global	timer2_empezar
 2013              	timer2_empezar:
 2014              	.LFB2:
  58:../timer2.c   **** 
  59:../timer2.c   **** /* Funcion que inicia la cuenta mediante timer2*/
  60:../timer2.c   **** void timer2_empezar(void)
  61:../timer2.c   **** {
 2015              		.loc 1 61 0
 2016              		.cfi_startproc
 2017              		@ Function supports interworking.
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 1, uses_anonymous_args = 0
 2020 0114 0DC0A0E1 		mov	ip, sp
 2021              	.LCFI4:
 2022              		.cfi_def_cfa_register 12
 2023 0118 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2024 011c 04B04CE2 		sub	fp, ip, #4
 2025              		.cfi_offset 14, -8
 2026              		.cfi_offset 13, -12
 2027              		.cfi_offset 11, -16
 2028              	.LCFI5:
 2029              		.cfi_def_cfa 11, 4
  62:../timer2.c   **** #ifndef EMU
  63:../timer2.c   **** 	// Reiniciar variable contador
  64:../timer2.c   **** 	timer2_num_int=0;
 2030              		.loc 1 64 0
 2031 0120 28309FE5 		ldr	r3, .L8
 2032 0124 0020A0E3 		mov	r2, #0
 2033 0128 002083E5 		str	r2, [r3, #0]
  65:../timer2.c   **** 	//Reiniciar registro intermedio
  66:../timer2.c   **** 	rTCNTO2 = 0;
 2034              		.loc 1 66 0
 2035 012c 20309FE5 		ldr	r3, .L8+4
 2036 0130 0020A0E3 		mov	r2, #0
 2037 0134 002083E5 		str	r2, [r3, #0]
  67:../timer2.c   **** 	/* iniciar timer2 (bit 12) y auto-reload (bit 15)*/
  68:../timer2.c   **** 	rTCON = 0x00009000;
 2038              		.loc 1 68 0
 2039 0138 18309FE5 		ldr	r3, .L8+8
 2040 013c 092AA0E3 		mov	r2, #36864
 2041 0140 002083E5 		str	r2, [r3, #0]
  69:../timer2.c   **** #endif
  70:../timer2.c   **** }
 2042              		.loc 1 70 0
 2043 0144 0CD04BE2 		sub	sp, fp, #12
 2044 0148 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2045 014c 1EFF2FE1 		bx	lr
 2046              	.L9:
 2047              		.align	2
 2048              	.L8:
 2049 0150 00000000 		.word	timer2_num_int
 2050 0154 2C00D501 		.word	30736428
 2051 0158 0800D501 		.word	30736392
 2052              		.cfi_endproc
 2053              	.LFE2:
 2055              		.global	__aeabi_ui2d
 2056              		.global	__aeabi_dmul
 2057              		.global	__aeabi_dadd
 2058              		.global	__aeabi_d2uiz
 2059              		.align	2
 2060              		.global	timer2_leer
 2062              	timer2_leer:
 2063              	.LFB3:
  71:../timer2.c   **** /* Funcion que obtiene el tiempo en microsegundos que se ha contado mediante el timer2.
  72:../timer2.c   ****  * Para obtener el tiempo sumaremos las veces que se ha realizado la resta con la fraccion de resta
  73:../timer2.c   ****  * que queda en el momento de leer. Este resultado le dividiremos la frecuencia de reloj en Mhz par
  74:../timer2.c   ****  * microsegundos. En este caso la frecuencia es 64Mhz y le aplicamos un divisor 1/2, con lo que ten
  75:../timer2.c   ****  * que dividir entre 32.
  76:../timer2.c   ****  */
  77:../timer2.c   **** unsigned int timer2_leer()
  78:../timer2.c   **** {
 2064              		.loc 1 78 0
 2065              		.cfi_startproc
 2066              		@ Function supports interworking.
 2067              		@ args = 0, pretend = 0, frame = 0
 2068              		@ frame_needed = 1, uses_anonymous_args = 0
 2069 015c 0DC0A0E1 		mov	ip, sp
 2070              	.LCFI6:
 2071              		.cfi_def_cfa_register 12
 2072 0160 78D82DE9 		stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}
 2073 0164 04B04CE2 		sub	fp, ip, #4
 2074              		.cfi_offset 14, -8
 2075              		.cfi_offset 13, -12
 2076              		.cfi_offset 11, -16
 2077              		.cfi_offset 6, -20
 2078              		.cfi_offset 5, -24
 2079              		.cfi_offset 4, -28
 2080              		.cfi_offset 3, -32
 2081              	.LCFI7:
 2082              		.cfi_def_cfa 11, 4
  79:../timer2.c   **** #ifndef EMU
  80:../timer2.c   **** 	return timer2_num_int * (rTCNTB2 * 0.03125)	//Cuentas completas
 2083              		.loc 1 80 0
 2084 0168 EC309FE5 		ldr	r3, .L11
 2085 016c 003093E5 		ldr	r3, [r3, #0]
 2086 0170 0300A0E1 		mov	r0, r3
 2087 0174 FEFFFFEB 		bl	__aeabi_ui2d
 2088 0178 0050A0E1 		mov	r5, r0
 2089 017c 0160A0E1 		mov	r6, r1
 2090 0180 D8309FE5 		ldr	r3, .L11+4
 2091 0184 003093E5 		ldr	r3, [r3, #0]
 2092 0188 0300A0E1 		mov	r0, r3
 2093 018c FEFFFFEB 		bl	__aeabi_ui2d
 2094 0190 0030A0E1 		mov	r3, r0
 2095 0194 0140A0E1 		mov	r4, r1
 2096 0198 0300A0E1 		mov	r0, r3
 2097 019c 0410A0E1 		mov	r1, r4
 2098 01a0 0020A0E3 		mov	r2, #0
 2099 01a4 FE35A0E3 		mov	r3, #1065353216
 2100 01a8 023683E2 		add	r3, r3, #2097152
 2101 01ac FEFFFFEB 		bl	__aeabi_dmul
 2102 01b0 0030A0E1 		mov	r3, r0
 2103 01b4 0140A0E1 		mov	r4, r1
 2104 01b8 0500A0E1 		mov	r0, r5
 2105 01bc 0610A0E1 		mov	r1, r6
 2106 01c0 0320A0E1 		mov	r2, r3
 2107 01c4 0430A0E1 		mov	r3, r4
 2108 01c8 FEFFFFEB 		bl	__aeabi_dmul
 2109 01cc 0030A0E1 		mov	r3, r0
 2110 01d0 0140A0E1 		mov	r4, r1
 2111 01d4 0350A0E1 		mov	r5, r3
 2112 01d8 0460A0E1 		mov	r6, r4
  81:../timer2.c   **** 	        + ((rTCNTB2 - rTCNTO2) * 0.03125);	//Cuenta en el momento de lectura
 2113              		.loc 1 81 0
 2114 01dc 7C309FE5 		ldr	r3, .L11+4
 2115 01e0 002093E5 		ldr	r2, [r3, #0]
 2116 01e4 78309FE5 		ldr	r3, .L11+8
 2117 01e8 003093E5 		ldr	r3, [r3, #0]
 2118 01ec 023063E0 		rsb	r3, r3, r2
 2119 01f0 0300A0E1 		mov	r0, r3
 2120 01f4 FEFFFFEB 		bl	__aeabi_ui2d
 2121 01f8 0030A0E1 		mov	r3, r0
 2122 01fc 0140A0E1 		mov	r4, r1
 2123 0200 0300A0E1 		mov	r0, r3
 2124 0204 0410A0E1 		mov	r1, r4
 2125 0208 0020A0E3 		mov	r2, #0
 2126 020c FE35A0E3 		mov	r3, #1065353216
 2127 0210 023683E2 		add	r3, r3, #2097152
 2128 0214 FEFFFFEB 		bl	__aeabi_dmul
 2129 0218 0030A0E1 		mov	r3, r0
 2130 021c 0140A0E1 		mov	r4, r1
 2131 0220 0500A0E1 		mov	r0, r5
 2132 0224 0610A0E1 		mov	r1, r6
 2133 0228 0320A0E1 		mov	r2, r3
 2134 022c 0430A0E1 		mov	r3, r4
 2135 0230 FEFFFFEB 		bl	__aeabi_dadd
 2136 0234 0030A0E1 		mov	r3, r0
 2137 0238 0140A0E1 		mov	r4, r1
  80:../timer2.c   **** 	return timer2_num_int * (rTCNTB2 * 0.03125)	//Cuentas completas
 2138              		.loc 1 80 0
 2139 023c 0300A0E1 		mov	r0, r3
 2140 0240 0410A0E1 		mov	r1, r4
 2141 0244 FEFFFFEB 		bl	__aeabi_d2uiz
 2142 0248 0030A0E1 		mov	r3, r0
  82:../timer2.c   **** #else
  83:../timer2.c   **** 	timer2_num_int++;
  84:../timer2.c   **** 	retrun timer2_num_int;
  85:../timer2.c   **** #endif
  86:../timer2.c   **** }
 2143              		.loc 1 86 0
 2144 024c 0300A0E1 		mov	r0, r3
 2145 0250 1CD04BE2 		sub	sp, fp, #28
 2146 0254 78689DE8 		ldmfd	sp, {r3, r4, r5, r6, fp, sp, lr}
 2147 0258 1EFF2FE1 		bx	lr
 2148              	.L12:
 2149              		.align	2
 2150              	.L11:
 2151 025c 00000000 		.word	timer2_num_int
 2152 0260 2400D501 		.word	30736420
 2153 0264 2C00D501 		.word	30736428
 2154              		.cfi_endproc
 2155              	.LFE3:
 2157              		.align	2
 2158              		.global	timer2_parar
 2160              	timer2_parar:
 2161              	.LFB4:
  87:../timer2.c   **** 
  88:../timer2.c   **** /* Funcion que para el timer y devuelve el tiempo transcurrido, pero no lo reinicia*/
  89:../timer2.c   **** unsigned int timer2_parar(void)
  90:../timer2.c   **** {
 2162              		.loc 1 90 0
 2163              		.cfi_startproc
 2164              		@ Function supports interworking.
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 1, uses_anonymous_args = 0
 2167 0268 0DC0A0E1 		mov	ip, sp
 2168              	.LCFI8:
 2169              		.cfi_def_cfa_register 12
 2170 026c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2171 0270 04B04CE2 		sub	fp, ip, #4
 2172              		.cfi_offset 14, -8
 2173              		.cfi_offset 13, -12
 2174              		.cfi_offset 11, -16
 2175              	.LCFI9:
 2176              		.cfi_def_cfa 11, 4
  91:../timer2.c   **** #ifndef EMU
  92:../timer2.c   **** 	/*parar timer2, desactivamos bit 12 en TCON*/
  93:../timer2.c   **** 	rTCON = rTCON & 0xffffEfff;
 2177              		.loc 1 93 0
 2178 0274 24309FE5 		ldr	r3, .L14
 2179 0278 20209FE5 		ldr	r2, .L14
 2180 027c 002092E5 		ldr	r2, [r2, #0]
 2181 0280 012AC2E3 		bic	r2, r2, #4096
 2182 0284 002083E5 		str	r2, [r3, #0]
  94:../timer2.c   **** 	return timer2_leer();
 2183              		.loc 1 94 0
 2184 0288 FEFFFFEB 		bl	timer2_leer
 2185 028c 0030A0E1 		mov	r3, r0
  95:../timer2.c   **** #endif
  96:../timer2.c   **** }
 2186              		.loc 1 96 0
 2187 0290 0300A0E1 		mov	r0, r3
 2188 0294 0CD04BE2 		sub	sp, fp, #12
 2189 0298 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2190 029c 1EFF2FE1 		bx	lr
 2191              	.L15:
 2192              		.align	2
 2193              	.L14:
 2194 02a0 0800D501 		.word	30736392
 2195              		.cfi_endproc
 2196              	.LFE4:
 2198              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer2.c
                            *COM*:00000004 timer2_num_int
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:1880   .text:00000000 $a
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:1883   .text:00000000 timer2_ISR
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:1923   .text:00000048 $d
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:1928   .text:00000050 $a
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:1931   .text:00000050 timer2_inicializar
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:1997   .text:000000ec $d
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2010   .text:00000114 $a
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2013   .text:00000114 timer2_empezar
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2049   .text:00000150 $d
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2059   .text:0000015c $a
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2062   .text:0000015c timer2_leer
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2151   .text:0000025c $d
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2157   .text:00000268 $a
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2160   .text:00000268 timer2_parar
C:\Users\Ivo\AppData\Local\Temp\ccEjGrfg.s:2194   .text:000002a0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
