   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"botones_antirebotes.c"
  21              	.Ltext0:
  22              		.file 1 "../botones_antirebotes.c"
 998              		.align	2
 999              	int_count:
 1000 0000 00000000 		.space	4
 1001              		.global	trp
 1002              		.data
 1003              		.align	2
 1006              	trp:
 1007 0000 14000000 		.word	20
 1008              		.global	trd
 1009              		.align	2
 1012              	trd:
 1013 0004 14000000 		.word	20
 1014              		.global	boton_pulsado_antirebotes
 1015              		.bss
 1018              	boton_pulsado_antirebotes:
 1019 0004 00       		.space	1
 1020              		.global	maquina
 1023              	maquina:
 1024 0005 00       		.space	1
 1025              		.global	trp_realizado
 1026 0006 0000     		.align	2
 1029              	trp_realizado:
 1030 0008 00000000 		.space	4
 1031              		.global	trd_realizado
 1032              		.align	2
 1035              	trd_realizado:
 1036 000c 00000000 		.space	4
 1037              		.text
 1038              		.align	2
 1039              		.global	callback_antirebotes
 1041              	callback_antirebotes:
 1042              	.LFB0:
   1:../botones_antirebotes.c **** /*
   2:../botones_antirebotes.c ****  * botones_antirebotes.c
   3:../botones_antirebotes.c ****  *
   4:../botones_antirebotes.c ****  *  Created on: 06/11/2018
   5:../botones_antirebotes.c ****  *      Author: Ivo
   6:../botones_antirebotes.c ****  */
   7:../botones_antirebotes.c **** 
   8:../botones_antirebotes.c **** #include "botones_antirebotes.h"
   9:../botones_antirebotes.c **** #include "button.h"
  10:../botones_antirebotes.c **** #include "latido.h"
  11:../botones_antirebotes.c **** #include "8led.h"
  12:../botones_antirebotes.c **** 
  13:../botones_antirebotes.c **** /* int_count la utilizamos para sacar un número por el 8led.
  14:../botones_antirebotes.c ****   Cuando se pulsa un botón sumamos y con el otro restamos. ¡A veces hay rebotes! */
  15:../botones_antirebotes.c **** static unsigned int int_count = 0;
  16:../botones_antirebotes.c **** //Estados de la maquina
  17:../botones_antirebotes.c **** typedef enum{sin_pulsar,ret_inicio,monitorizacion,ret_salida}
  18:../botones_antirebotes.c **** estado_botones_antirebotes;
  19:../botones_antirebotes.c **** 
  20:../botones_antirebotes.c **** int trp = 20;
  21:../botones_antirebotes.c **** int trd = 20;
  22:../botones_antirebotes.c **** estado_button boton_pulsado_antirebotes = button_none;
  23:../botones_antirebotes.c **** estado_botones_antirebotes maquina = sin_pulsar;
  24:../botones_antirebotes.c **** 
  25:../botones_antirebotes.c **** int trp_realizado=0;
  26:../botones_antirebotes.c **** int trd_realizado=0;
  27:../botones_antirebotes.c **** void callback_antirebotes(estado_button);
  28:../botones_antirebotes.c **** void callback_espera();
  29:../botones_antirebotes.c **** void incrementa();
  30:../botones_antirebotes.c **** 
  31:../botones_antirebotes.c **** void callback_antirebotes(estado_button e){
 1043              		.loc 1 31 0
 1044              		.cfi_startproc
 1045              		@ Function supports interworking.
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 0DC0A0E1 		mov	ip, sp
 1049              	.LCFI0:
 1050              		.cfi_def_cfa_register 12
 1051 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1052 0008 04B04CE2 		sub	fp, ip, #4
 1053              		.cfi_offset 14, -8
 1054              		.cfi_offset 13, -12
 1055              		.cfi_offset 11, -16
 1056              	.LCFI1:
 1057              		.cfi_def_cfa 11, 4
 1058 000c 08D04DE2 		sub	sp, sp, #8
 1059 0010 0030A0E1 		mov	r3, r0
 1060 0014 0D304BE5 		strb	r3, [fp, #-13]
  32:../botones_antirebotes.c **** 	boton_pulsado_antirebotes = e;
 1061              		.loc 1 32 0
 1062 0018 74309FE5 		ldr	r3, .L5
 1063 001c 0D205BE5 		ldrb	r2, [fp, #-13]
 1064 0020 0020C3E5 		strb	r2, [r3, #0]
  33:../botones_antirebotes.c **** 	 switch(maquina){
 1065              		.loc 1 33 0
 1066 0024 6C309FE5 		ldr	r3, .L5+4
 1067 0028 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1068 002c 000053E3 		cmp	r3, #0
 1069 0030 0200000A 		beq	.L3
 1070 0034 030053E3 		cmp	r3, #3
 1071 0038 0A00000A 		beq	.L4
 1072 003c 110000EA 		b	.L1
 1073              	.L3:
  34:../botones_antirebotes.c **** 	 case sin_pulsar: //Se ha pulsado un boton por primera vez
  35:../botones_antirebotes.c **** 		 espera_ticks(trp,callback_espera); //Esperamos un retardo
 1074              		.loc 1 35 0
 1075 0040 54309FE5 		ldr	r3, .L5+8
 1076 0044 002093E5 		ldr	r2, [r3, #0]
 1077 0048 50309FE5 		ldr	r3, .L5+12
 1078 004c 0200A0E1 		mov	r0, r2
 1079 0050 0310A0E1 		mov	r1, r3
 1080 0054 FEFFFFEB 		bl	espera_ticks
  36:../botones_antirebotes.c **** 		 maquina = ret_inicio;
 1081              		.loc 1 36 0
 1082 0058 38309FE5 		ldr	r3, .L5+4
 1083 005c 0120A0E3 		mov	r2, #1
 1084 0060 0020C3E5 		strb	r2, [r3, #0]
  37:../botones_antirebotes.c **** 		 break;
 1085              		.loc 1 37 0
 1086 0064 070000EA 		b	.L1
 1087              	.L4:
  38:../botones_antirebotes.c **** 	 case ret_salida:
  39:../botones_antirebotes.c **** 		 incrementa();
 1088              		.loc 1 39 0
 1089 0068 FEFFFFEB 		bl	incrementa
  40:../botones_antirebotes.c **** 		 espera_ticks(trd,callback_espera);
 1090              		.loc 1 40 0
 1091 006c 30309FE5 		ldr	r3, .L5+16
 1092 0070 002093E5 		ldr	r2, [r3, #0]
 1093 0074 24309FE5 		ldr	r3, .L5+12
 1094 0078 0200A0E1 		mov	r0, r2
 1095 007c 0310A0E1 		mov	r1, r3
 1096 0080 FEFFFFEB 		bl	espera_ticks
  41:../botones_antirebotes.c **** 		 break;
 1097              		.loc 1 41 0
 1098 0084 0000A0E1 		mov	r0, r0	@ nop
 1099              	.L1:
  42:../botones_antirebotes.c **** 	 }
  43:../botones_antirebotes.c **** }
 1100              		.loc 1 43 0
 1101 0088 0CD04BE2 		sub	sp, fp, #12
 1102 008c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1103 0090 1EFF2FE1 		bx	lr
 1104              	.L6:
 1105              		.align	2
 1106              	.L5:
 1107 0094 00000000 		.word	boton_pulsado_antirebotes
 1108 0098 00000000 		.word	maquina
 1109 009c 00000000 		.word	trp
 1110 00a0 00000000 		.word	callback_espera
 1111 00a4 00000000 		.word	trd
 1112              		.cfi_endproc
 1113              	.LFE0:
 1115              		.align	2
 1116              		.global	callback_espera
 1118              	callback_espera:
 1119              	.LFB1:
  44:../botones_antirebotes.c **** 
  45:../botones_antirebotes.c **** void callback_espera(){
 1120              		.loc 1 45 0
 1121              		.cfi_startproc
 1122              		@ Function supports interworking.
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125 00a8 0DC0A0E1 		mov	ip, sp
 1126              	.LCFI2:
 1127              		.cfi_def_cfa_register 12
 1128 00ac 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1129 00b0 04B04CE2 		sub	fp, ip, #4
 1130              		.cfi_offset 14, -8
 1131              		.cfi_offset 13, -12
 1132              		.cfi_offset 11, -16
 1133              	.LCFI3:
 1134              		.cfi_def_cfa 11, 4
  46:../botones_antirebotes.c **** 	switch(maquina){
 1135              		.loc 1 46 0
 1136 00b4 AC309FE5 		ldr	r3, .L14
 1137 00b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1138 00bc 020053E3 		cmp	r3, #2
 1139 00c0 0E00000A 		beq	.L10
 1140 00c4 030053E3 		cmp	r3, #3
 1141 00c8 1D00000A 		beq	.L11
 1142 00cc 010053E3 		cmp	r3, #1
 1143 00d0 2100001A 		bne	.L7
 1144              	.L9:
  47:../botones_antirebotes.c **** 	case ret_inicio:
  48:../botones_antirebotes.c **** 		trp_realizado=1;
 1145              		.loc 1 48 0
 1146 00d4 90309FE5 		ldr	r3, .L14+4
 1147 00d8 0120A0E3 		mov	r2, #1
 1148 00dc 002083E5 		str	r2, [r3, #0]
  49:../botones_antirebotes.c **** 		maquina=monitorizacion;
 1149              		.loc 1 49 0
 1150 00e0 80309FE5 		ldr	r3, .L14
 1151 00e4 0220A0E3 		mov	r2, #2
 1152 00e8 0020C3E5 		strb	r2, [r3, #0]
  50:../botones_antirebotes.c **** 		espera_ticks(1,callback_espera);
 1153              		.loc 1 50 0
 1154 00ec 7C309FE5 		ldr	r3, .L14+8
 1155 00f0 0100A0E3 		mov	r0, #1
 1156 00f4 0310A0E1 		mov	r1, r3
 1157 00f8 FEFFFFEB 		bl	espera_ticks
  51:../botones_antirebotes.c **** 		break;
 1158              		.loc 1 51 0
 1159 00fc 160000EA 		b	.L7
 1160              	.L10:
  52:../botones_antirebotes.c **** 	case monitorizacion:
  53:../botones_antirebotes.c **** 		if(button_estado() == button_none){ //He levantado
 1161              		.loc 1 53 0
 1162 0100 FEFFFFEB 		bl	button_estado
 1163 0104 0030A0E1 		mov	r3, r0
 1164 0108 000053E3 		cmp	r3, #0
 1165 010c 0700001A 		bne	.L12
  54:../botones_antirebotes.c **** 			maquina = ret_salida;
 1166              		.loc 1 54 0
 1167 0110 50309FE5 		ldr	r3, .L14
 1168 0114 0320A0E3 		mov	r2, #3
 1169 0118 0020C3E5 		strb	r2, [r3, #0]
  55:../botones_antirebotes.c **** 			callback_antirebotes(boton_pulsado_antirebotes); //Realizo la logica necesaria y vuelvo a espera
 1170              		.loc 1 55 0
 1171 011c 50309FE5 		ldr	r3, .L14+12
 1172 0120 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1173 0124 0300A0E1 		mov	r0, r3
 1174 0128 FEFFFFEB 		bl	callback_antirebotes
  56:../botones_antirebotes.c **** 		}else{
  57:../botones_antirebotes.c **** 			espera_ticks(1,callback_espera);
  58:../botones_antirebotes.c **** 		}
  59:../botones_antirebotes.c **** 		break;
 1175              		.loc 1 59 0
 1176 012c 0A0000EA 		b	.L7
 1177              	.L12:
  57:../botones_antirebotes.c **** 			espera_ticks(1,callback_espera);
 1178              		.loc 1 57 0
 1179 0130 38309FE5 		ldr	r3, .L14+8
 1180 0134 0100A0E3 		mov	r0, #1
 1181 0138 0310A0E1 		mov	r1, r3
 1182 013c FEFFFFEB 		bl	espera_ticks
 1183              		.loc 1 59 0
 1184 0140 050000EA 		b	.L7
 1185              	.L11:
  60:../botones_antirebotes.c **** 	case ret_salida:
  61:../botones_antirebotes.c **** 		maquina = sin_pulsar;
 1186              		.loc 1 61 0
 1187 0144 1C309FE5 		ldr	r3, .L14
 1188 0148 0020A0E3 		mov	r2, #0
 1189 014c 0020C3E5 		strb	r2, [r3, #0]
  62:../botones_antirebotes.c **** 		button_empezar(callback_antirebotes);
 1190              		.loc 1 62 0
 1191 0150 20009FE5 		ldr	r0, .L14+16
 1192 0154 FEFFFFEB 		bl	button_empezar
  63:../botones_antirebotes.c **** 		break;
 1193              		.loc 1 63 0
 1194 0158 0000A0E1 		mov	r0, r0	@ nop
 1195              	.L7:
  64:../botones_antirebotes.c **** 	}
  65:../botones_antirebotes.c **** }
 1196              		.loc 1 65 0
 1197 015c 0CD04BE2 		sub	sp, fp, #12
 1198 0160 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1199 0164 1EFF2FE1 		bx	lr
 1200              	.L15:
 1201              		.align	2
 1202              	.L14:
 1203 0168 00000000 		.word	maquina
 1204 016c 00000000 		.word	trp_realizado
 1205 0170 00000000 		.word	callback_espera
 1206 0174 00000000 		.word	boton_pulsado_antirebotes
 1207 0178 00000000 		.word	callback_antirebotes
 1208              		.cfi_endproc
 1209              	.LFE1:
 1211              		.align	2
 1212              		.global	inicio_antirebotes
 1214              	inicio_antirebotes:
 1215              	.LFB2:
  66:../botones_antirebotes.c **** 
  67:../botones_antirebotes.c **** void inicio_antirebotes(){
 1216              		.loc 1 67 0
 1217              		.cfi_startproc
 1218              		@ Function supports interworking.
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 017c 0DC0A0E1 		mov	ip, sp
 1222              	.LCFI4:
 1223              		.cfi_def_cfa_register 12
 1224 0180 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1225 0184 04B04CE2 		sub	fp, ip, #4
 1226              		.cfi_offset 14, -8
 1227              		.cfi_offset 13, -12
 1228              		.cfi_offset 11, -16
 1229              	.LCFI5:
 1230              		.cfi_def_cfa 11, 4
  68:../botones_antirebotes.c **** 	button_iniciar();
 1231              		.loc 1 68 0
 1232 0188 FEFFFFEB 		bl	button_iniciar
  69:../botones_antirebotes.c **** 	button_empezar(callback_antirebotes);
 1233              		.loc 1 69 0
 1234 018c 0C009FE5 		ldr	r0, .L17
 1235 0190 FEFFFFEB 		bl	button_empezar
  70:../botones_antirebotes.c **** }
 1236              		.loc 1 70 0
 1237 0194 0CD04BE2 		sub	sp, fp, #12
 1238 0198 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1239 019c 1EFF2FE1 		bx	lr
 1240              	.L18:
 1241              		.align	2
 1242              	.L17:
 1243 01a0 00000000 		.word	callback_antirebotes
 1244              		.cfi_endproc
 1245              	.LFE2:
 1247              		.align	2
 1248              		.global	incrementa
 1250              	incrementa:
 1251              	.LFB3:
  71:../botones_antirebotes.c **** 
  72:../botones_antirebotes.c **** void incrementa(){
 1252              		.loc 1 72 0
 1253              		.cfi_startproc
 1254              		@ Function supports interworking.
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 1, uses_anonymous_args = 0
 1257 01a4 0DC0A0E1 		mov	ip, sp
 1258              	.LCFI6:
 1259              		.cfi_def_cfa_register 12
 1260 01a8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1261 01ac 04B04CE2 		sub	fp, ip, #4
 1262              		.cfi_offset 14, -8
 1263              		.cfi_offset 13, -12
 1264              		.cfi_offset 11, -16
 1265              	.LCFI7:
 1266              		.cfi_def_cfa 11, 4
  73:../botones_antirebotes.c **** 	switch (boton_pulsado_antirebotes)
 1267              		.loc 1 73 0
 1268 01b0 64309FE5 		ldr	r3, .L24
 1269 01b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1270 01b8 040053E3 		cmp	r3, #4
 1271 01bc 0200000A 		beq	.L21
 1272 01c0 080053E3 		cmp	r3, #8
 1273 01c4 0600000A 		beq	.L22
  74:../botones_antirebotes.c **** 		{
  75:../botones_antirebotes.c **** 			case button_iz:
  76:../botones_antirebotes.c **** 				int_count++; // incrementamos el contador
  77:../botones_antirebotes.c **** 				break;
  78:../botones_antirebotes.c **** 			case button_dr:
  79:../botones_antirebotes.c **** 				int_count--; // decrementamos el contador
  80:../botones_antirebotes.c **** 				break;
  81:../botones_antirebotes.c **** 			default:
  82:../botones_antirebotes.c **** 				break;
 1274              		.loc 1 82 0
 1275 01c8 0B0000EA 		b	.L23
 1276              	.L21:
  76:../botones_antirebotes.c **** 				int_count++; // incrementamos el contador
 1277              		.loc 1 76 0
 1278 01cc 4C309FE5 		ldr	r3, .L24+4
 1279 01d0 003093E5 		ldr	r3, [r3, #0]
 1280 01d4 012083E2 		add	r2, r3, #1
 1281 01d8 40309FE5 		ldr	r3, .L24+4
 1282 01dc 002083E5 		str	r2, [r3, #0]
  77:../botones_antirebotes.c **** 				break;
 1283              		.loc 1 77 0
 1284 01e0 050000EA 		b	.L23
 1285              	.L22:
  79:../botones_antirebotes.c **** 				int_count--; // decrementamos el contador
 1286              		.loc 1 79 0
 1287 01e4 34309FE5 		ldr	r3, .L24+4
 1288 01e8 003093E5 		ldr	r3, [r3, #0]
 1289 01ec 012043E2 		sub	r2, r3, #1
 1290 01f0 28309FE5 		ldr	r3, .L24+4
 1291 01f4 002083E5 		str	r2, [r3, #0]
  80:../botones_antirebotes.c **** 				break;
 1292              		.loc 1 80 0
 1293 01f8 0000A0E1 		mov	r0, r0	@ nop
 1294              	.L23:
  83:../botones_antirebotes.c **** 		}
  84:../botones_antirebotes.c **** 		D8Led_symbol(int_count & 0x000f); // sacamos el valor por pantalla (módulo 16)
 1295              		.loc 1 84 0
 1296 01fc 1C309FE5 		ldr	r3, .L24+4
 1297 0200 003093E5 		ldr	r3, [r3, #0]
 1298 0204 0F3003E2 		and	r3, r3, #15
 1299 0208 0300A0E1 		mov	r0, r3
 1300 020c FEFFFFEB 		bl	D8Led_symbol
  85:../botones_antirebotes.c **** }
 1301              		.loc 1 85 0
 1302 0210 0CD04BE2 		sub	sp, fp, #12
 1303 0214 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1304 0218 1EFF2FE1 		bx	lr
 1305              	.L25:
 1306              		.align	2
 1307              	.L24:
 1308 021c 00000000 		.word	boton_pulsado_antirebotes
 1309 0220 00000000 		.word	int_count
 1310              		.cfi_endproc
 1311              	.LFE3:
 1313              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 botones_antirebotes.c
                            *COM*:00000004 switch_leds_l
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:998    .bss:00000000 $d
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:999    .bss:00000000 int_count
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1006   .data:00000000 trp
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1003   .data:00000000 $d
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1012   .data:00000004 trd
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1018   .bss:00000004 boton_pulsado_antirebotes
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1023   .bss:00000005 maquina
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1029   .bss:00000008 trp_realizado
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1035   .bss:0000000c trd_realizado
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1038   .text:00000000 $a
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1041   .text:00000000 callback_antirebotes
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1250   .text:000001a4 incrementa
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1107   .text:00000094 $d
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1118   .text:000000a8 callback_espera
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1115   .text:000000a8 $a
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1203   .text:00000168 $d
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1211   .text:0000017c $a
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1214   .text:0000017c inicio_antirebotes
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1243   .text:000001a0 $d
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1247   .text:000001a4 $a
C:\Users\Ivo\AppData\Local\Temp\ccXl2u8r.s:1308   .text:0000021c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
espera_ticks
button_estado
button_empezar
button_iniciar
D8Led_symbol
