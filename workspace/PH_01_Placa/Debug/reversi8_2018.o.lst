   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2018.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2018.c"
 976              	NO:
 977 0000 00       		.space	1
 978              		.global	SI
 981              	SI:
 982 0001 01       		.byte	1
 983              		.global	CASILLA_OCUPADA
 986              	CASILLA_OCUPADA:
 987 0002 02       		.byte	2
 988 0003 00000000 		.align	3
 988      00
 991              	tabla_valor:
 992 0008 08       		.byte	8
 993 0009 02       		.byte	2
 994 000a 07       		.byte	7
 995 000b 03       		.byte	3
 996 000c 03       		.byte	3
 997 000d 07       		.byte	7
 998 000e 02       		.byte	2
 999 000f 08       		.byte	8
 1000 0010 02       		.byte	2
 1001 0011 01       		.byte	1
 1002 0012 04       		.byte	4
 1003 0013 04       		.byte	4
 1004 0014 04       		.byte	4
 1005 0015 04       		.byte	4
 1006 0016 01       		.byte	1
 1007 0017 02       		.byte	2
 1008 0018 07       		.byte	7
 1009 0019 04       		.byte	4
 1010 001a 06       		.byte	6
 1011 001b 05       		.byte	5
 1012 001c 05       		.byte	5
 1013 001d 06       		.byte	6
 1014 001e 04       		.byte	4
 1015 001f 07       		.byte	7
 1016 0020 03       		.byte	3
 1017 0021 04       		.byte	4
 1018 0022 05       		.byte	5
 1019 0023 00       		.byte	0
 1020 0024 00       		.byte	0
 1021 0025 05       		.byte	5
 1022 0026 04       		.byte	4
 1023 0027 03       		.byte	3
 1024 0028 03       		.byte	3
 1025 0029 04       		.byte	4
 1026 002a 05       		.byte	5
 1027 002b 00       		.byte	0
 1028 002c 00       		.byte	0
 1029 002d 05       		.byte	5
 1030 002e 04       		.byte	4
 1031 002f 03       		.byte	3
 1032 0030 07       		.byte	7
 1033 0031 04       		.byte	4
 1034 0032 06       		.byte	6
 1035 0033 05       		.byte	5
 1036 0034 05       		.byte	5
 1037 0035 06       		.byte	6
 1038 0036 04       		.byte	4
 1039 0037 07       		.byte	7
 1040 0038 02       		.byte	2
 1041 0039 01       		.byte	1
 1042 003a 04       		.byte	4
 1043 003b 04       		.byte	4
 1044 003c 04       		.byte	4
 1045 003d 04       		.byte	4
 1046 003e 01       		.byte	1
 1047 003f 02       		.byte	2
 1048 0040 08       		.byte	8
 1049 0041 02       		.byte	2
 1050 0042 07       		.byte	7
 1051 0043 03       		.byte	3
 1052 0044 03       		.byte	3
 1053 0045 07       		.byte	7
 1054 0046 02       		.byte	2
 1055 0047 08       		.byte	8
 1056              		.global	vSF
 1057              		.align	2
 1060              	vSF:
 1061 0048 FF       		.byte	-1
 1062 0049 FF       		.byte	-1
 1063 004a 00       		.byte	0
 1064 004b 01       		.byte	1
 1065 004c 01       		.byte	1
 1066 004d 01       		.byte	1
 1067 004e 00       		.byte	0
 1068 004f FF       		.byte	-1
 1069              		.global	vSC
 1070              		.align	2
 1073              	vSC:
 1074 0050 00       		.byte	0
 1075 0051 01       		.byte	1
 1076 0052 01       		.byte	1
 1077 0053 01       		.byte	1
 1078 0054 00       		.byte	0
 1079 0055 FF       		.byte	-1
 1080 0056 FF       		.byte	-1
 1081 0057 FF       		.byte	-1
 1082              		.global	tablero
 1083              		.bss
 1084              		.align	3
 1087              	tablero:
 1088 0000 00000000 		.space	64
 1088      00000000 
 1088      00000000 
 1088      00000000 
 1088      00000000 
 1089              		.global	fila
 1092              	fila:
 1093 0040 00       		.space	1
 1094              		.global	columna
 1097              	columna:
 1098 0041 00       		.space	1
 1099              		.global	ready
 1102              	ready:
 1103 0042 00       		.space	1
 1104 0043 00000000 		.text
 1104      00
 1105              		.align	2
 1106              		.global	init_table
 1108              	init_table:
 1109              	.LFB0:
   1:../reversi8_2018.c **** //Version Placa 0.1
   2:../reversi8_2018.c **** // Tamaño del tablero
   3:../reversi8_2018.c **** #include "led.h"
   4:../reversi8_2018.c **** enum { DIM=8 };
   5:../reversi8_2018.c **** 
   6:../reversi8_2018.c **** // Valores que puede devolver la función patron_volteo())
   7:../reversi8_2018.c **** enum {
   8:../reversi8_2018.c **** 	NO_HAY_PATRON = 0,
   9:../reversi8_2018.c ****   PATRON_ENCONTRADO = 1
  10:../reversi8_2018.c **** };
  11:../reversi8_2018.c **** 
  12:../reversi8_2018.c **** // Estados de las casillas del tablero
  13:../reversi8_2018.c **** enum {
  14:../reversi8_2018.c **** CASILLA_VACIA = 0,
  15:../reversi8_2018.c **** FICHA_BLANCA = 1,
  16:../reversi8_2018.c **** FICHA_NEGRA = 2
  17:../reversi8_2018.c **** };
  18:../reversi8_2018.c **** 
  19:../reversi8_2018.c **** // candidatas: indica las posiciones a explorar
  20:../reversi8_2018.c **** // Se usa para no explorar todo el tablero innecesariamente
  21:../reversi8_2018.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  22:../reversi8_2018.c **** const char  NO              = 0;
  23:../reversi8_2018.c **** const char  SI              = 1;
  24:../reversi8_2018.c **** const char  CASILLA_OCUPADA = 2;
  25:../reversi8_2018.c **** 
  26:../reversi8_2018.c **** /////////////////////////////////////////////////////////////////////////////
  27:../reversi8_2018.c **** // TABLAS AUXILIARES
  28:../reversi8_2018.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  29:../reversi8_2018.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  30:../reversi8_2018.c **** 
  31:../reversi8_2018.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  32:../reversi8_2018.c **** {
  33:../reversi8_2018.c ****     {8,2,7,3,3,7,2,8},
  34:../reversi8_2018.c ****     {2,1,4,4,4,4,1,2},
  35:../reversi8_2018.c ****     {7,4,6,5,5,6,4,7},
  36:../reversi8_2018.c ****     {3,4,5,0,0,5,4,3},
  37:../reversi8_2018.c ****     {3,4,5,0,0,5,4,3},
  38:../reversi8_2018.c ****     {7,4,6,5,5,6,4,7},
  39:../reversi8_2018.c ****     {2,1,4,4,4,4,1,2},
  40:../reversi8_2018.c ****     {8,2,7,3,3,7,2,8}
  41:../reversi8_2018.c **** };
  42:../reversi8_2018.c **** 
  43:../reversi8_2018.c **** 
  44:../reversi8_2018.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  45:../reversi8_2018.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  46:../reversi8_2018.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  47:../reversi8_2018.c **** 
  48:../reversi8_2018.c **** //////////////////////////////////////////////////////////////////////////////////////
  49:../reversi8_2018.c **** // Variables globales que no deberían serlo
  50:../reversi8_2018.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  51:../reversi8_2018.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  52:../reversi8_2018.c **** //////////////////////////////////////////////////////////////////////////////////////
  53:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////
  54:../reversi8_2018.c **** // Tablero sin inicializar
  55:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////
  56:../reversi8_2018.c **** char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  57:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  58:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  59:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  60:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  61:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  62:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  63:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  64:../reversi8_2018.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  65:../reversi8_2018.c **** 	    };
  66:../reversi8_2018.c **** 
  67:../reversi8_2018.c ****   ////////////////////////////////////////////////////////////////////
  68:../reversi8_2018.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
  69:../reversi8_2018.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
  70:../reversi8_2018.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
  71:../reversi8_2018.c ****   char fila=0, columna=0, ready = 0;
  72:../reversi8_2018.c **** 
  73:../reversi8_2018.c **** 
  74:../reversi8_2018.c **** 
  75:../reversi8_2018.c **** // extern int patron_volteo(char tablero[][8], int *longitud,char f, char c, char SF, char SC, char
  76:../reversi8_2018.c **** 
  77:../reversi8_2018.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  78:../reversi8_2018.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
  79:../reversi8_2018.c **** // pone el tablero a cero y luego coloca las fichas centrales.
  80:../reversi8_2018.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
  81:../reversi8_2018.c **** {
 1110              		.loc 1 81 0
 1111              		.cfi_startproc
 1112              		@ Function supports interworking.
 1113              		@ args = 0, pretend = 0, frame = 16
 1114              		@ frame_needed = 1, uses_anonymous_args = 0
 1115 0000 0DC0A0E1 		mov	ip, sp
 1116              	.LCFI0:
 1117              		.cfi_def_cfa_register 12
 1118 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1119 0008 04B04CE2 		sub	fp, ip, #4
 1120              		.cfi_offset 14, -8
 1121              		.cfi_offset 13, -12
 1122              		.cfi_offset 11, -16
 1123              	.LCFI1:
 1124              		.cfi_def_cfa 11, 4
 1125 000c 10D04DE2 		sub	sp, sp, #16
 1126 0010 18000BE5 		str	r0, [fp, #-24]
 1127 0014 1C100BE5 		str	r1, [fp, #-28]
  82:../reversi8_2018.c ****     int i, j;
  83:../reversi8_2018.c **** 
  84:../reversi8_2018.c ****     for (i = 0; i < DIM; i++)
 1128              		.loc 1 84 0
 1129 0018 0030A0E3 		mov	r3, #0
 1130 001c 10300BE5 		str	r3, [fp, #-16]
 1131 0020 130000EA 		b	.L2
 1132              	.L5:
  85:../reversi8_2018.c ****     {
  86:../reversi8_2018.c ****         for (j = 0; j < DIM; j++)
 1133              		.loc 1 86 0
 1134 0024 0030A0E3 		mov	r3, #0
 1135 0028 14300BE5 		str	r3, [fp, #-20]
 1136 002c 0A0000EA 		b	.L3
 1137              	.L4:
  87:../reversi8_2018.c ****             tablero[i][j] = CASILLA_VACIA;
 1138              		.loc 1 87 0 discriminator 2
 1139 0030 10301BE5 		ldr	r3, [fp, #-16]
 1140 0034 8331A0E1 		mov	r3, r3, asl #3
 1141 0038 18201BE5 		ldr	r2, [fp, #-24]
 1142 003c 032082E0 		add	r2, r2, r3
 1143 0040 14301BE5 		ldr	r3, [fp, #-20]
 1144 0044 033082E0 		add	r3, r2, r3
 1145 0048 0020A0E3 		mov	r2, #0
 1146 004c 0020C3E5 		strb	r2, [r3, #0]
  86:../reversi8_2018.c ****         for (j = 0; j < DIM; j++)
 1147              		.loc 1 86 0 discriminator 2
 1148 0050 14301BE5 		ldr	r3, [fp, #-20]
 1149 0054 013083E2 		add	r3, r3, #1
 1150 0058 14300BE5 		str	r3, [fp, #-20]
 1151              	.L3:
  86:../reversi8_2018.c ****         for (j = 0; j < DIM; j++)
 1152              		.loc 1 86 0 is_stmt 0 discriminator 1
 1153 005c 14301BE5 		ldr	r3, [fp, #-20]
 1154 0060 070053E3 		cmp	r3, #7
 1155 0064 F1FFFFDA 		ble	.L4
  84:../reversi8_2018.c ****     for (i = 0; i < DIM; i++)
 1156              		.loc 1 84 0 is_stmt 1
 1157 0068 10301BE5 		ldr	r3, [fp, #-16]
 1158 006c 013083E2 		add	r3, r3, #1
 1159 0070 10300BE5 		str	r3, [fp, #-16]
 1160              	.L2:
  84:../reversi8_2018.c ****     for (i = 0; i < DIM; i++)
 1161              		.loc 1 84 0 is_stmt 0 discriminator 1
 1162 0074 10301BE5 		ldr	r3, [fp, #-16]
 1163 0078 070053E3 		cmp	r3, #7
 1164 007c E8FFFFDA 		ble	.L5
  88:../reversi8_2018.c ****     }
  89:../reversi8_2018.c **** #if 0
  90:../reversi8_2018.c ****     for (i = 3; i < 5; ++i) {
  91:../reversi8_2018.c **** 	for(j = 3; j < 5; ++j) {
  92:../reversi8_2018.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
  93:../reversi8_2018.c **** 	}
  94:../reversi8_2018.c ****     }
  95:../reversi8_2018.c **** 
  96:../reversi8_2018.c ****     for (i = 2; i < 6; ++i) {
  97:../reversi8_2018.c **** 	for (j = 2; j < 6; ++j) {
  98:../reversi8_2018.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
  99:../reversi8_2018.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 100:../reversi8_2018.c **** 	    } else {
 101:../reversi8_2018.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 102:../reversi8_2018.c **** 	    }
 103:../reversi8_2018.c **** 	}
 104:../reversi8_2018.c ****     }
 105:../reversi8_2018.c **** #endif
 106:../reversi8_2018.c ****     // arriba hay versión alternativa
 107:../reversi8_2018.c ****     tablero[3][3] = FICHA_BLANCA;
 1165              		.loc 1 107 0 is_stmt 1
 1166 0080 18301BE5 		ldr	r3, [fp, #-24]
 1167 0084 183083E2 		add	r3, r3, #24
 1168 0088 0120A0E3 		mov	r2, #1
 1169 008c 0320C3E5 		strb	r2, [r3, #3]
 108:../reversi8_2018.c ****     tablero[4][4] = FICHA_BLANCA;
 1170              		.loc 1 108 0
 1171 0090 18301BE5 		ldr	r3, [fp, #-24]
 1172 0094 203083E2 		add	r3, r3, #32
 1173 0098 0120A0E3 		mov	r2, #1
 1174 009c 0420C3E5 		strb	r2, [r3, #4]
 109:../reversi8_2018.c ****     tablero[3][4] = FICHA_NEGRA;
 1175              		.loc 1 109 0
 1176 00a0 18301BE5 		ldr	r3, [fp, #-24]
 1177 00a4 183083E2 		add	r3, r3, #24
 1178 00a8 0220A0E3 		mov	r2, #2
 1179 00ac 0420C3E5 		strb	r2, [r3, #4]
 110:../reversi8_2018.c ****     tablero[4][3] = FICHA_NEGRA;
 1180              		.loc 1 110 0
 1181 00b0 18301BE5 		ldr	r3, [fp, #-24]
 1182 00b4 203083E2 		add	r3, r3, #32
 1183 00b8 0220A0E3 		mov	r2, #2
 1184 00bc 0320C3E5 		strb	r2, [r3, #3]
 111:../reversi8_2018.c **** 
 112:../reversi8_2018.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1185              		.loc 1 112 0
 1186 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 1187 00c4 183083E2 		add	r3, r3, #24
 1188 00c8 3C219FE5 		ldr	r2, .L6
 1189 00cc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1190 00d0 0320C3E5 		strb	r2, [r3, #3]
 113:../reversi8_2018.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1191              		.loc 1 113 0
 1192 00d4 1C301BE5 		ldr	r3, [fp, #-28]
 1193 00d8 203083E2 		add	r3, r3, #32
 1194 00dc 28219FE5 		ldr	r2, .L6
 1195 00e0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1196 00e4 0420C3E5 		strb	r2, [r3, #4]
 114:../reversi8_2018.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1197              		.loc 1 114 0
 1198 00e8 1C301BE5 		ldr	r3, [fp, #-28]
 1199 00ec 183083E2 		add	r3, r3, #24
 1200 00f0 14219FE5 		ldr	r2, .L6
 1201 00f4 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1202 00f8 0420C3E5 		strb	r2, [r3, #4]
 115:../reversi8_2018.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1203              		.loc 1 115 0
 1204 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 1205 0100 203083E2 		add	r3, r3, #32
 1206 0104 00219FE5 		ldr	r2, .L6
 1207 0108 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1208 010c 0320C3E5 		strb	r2, [r3, #3]
 116:../reversi8_2018.c **** 
 117:../reversi8_2018.c ****     // casillas a explorar:
 118:../reversi8_2018.c ****     candidatas[2][2] = SI;
 1209              		.loc 1 118 0
 1210 0110 1C301BE5 		ldr	r3, [fp, #-28]
 1211 0114 103083E2 		add	r3, r3, #16
 1212 0118 F0209FE5 		ldr	r2, .L6+4
 1213 011c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1214 0120 0220C3E5 		strb	r2, [r3, #2]
 119:../reversi8_2018.c ****     candidatas[2][3] = SI;
 1215              		.loc 1 119 0
 1216 0124 1C301BE5 		ldr	r3, [fp, #-28]
 1217 0128 103083E2 		add	r3, r3, #16
 1218 012c DC209FE5 		ldr	r2, .L6+4
 1219 0130 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1220 0134 0320C3E5 		strb	r2, [r3, #3]
 120:../reversi8_2018.c ****     candidatas[2][4] = SI;
 1221              		.loc 1 120 0
 1222 0138 1C301BE5 		ldr	r3, [fp, #-28]
 1223 013c 103083E2 		add	r3, r3, #16
 1224 0140 C8209FE5 		ldr	r2, .L6+4
 1225 0144 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1226 0148 0420C3E5 		strb	r2, [r3, #4]
 121:../reversi8_2018.c ****     candidatas[2][5] = SI;
 1227              		.loc 1 121 0
 1228 014c 1C301BE5 		ldr	r3, [fp, #-28]
 1229 0150 103083E2 		add	r3, r3, #16
 1230 0154 B4209FE5 		ldr	r2, .L6+4
 1231 0158 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1232 015c 0520C3E5 		strb	r2, [r3, #5]
 122:../reversi8_2018.c ****     candidatas[3][2] = SI;
 1233              		.loc 1 122 0
 1234 0160 1C301BE5 		ldr	r3, [fp, #-28]
 1235 0164 183083E2 		add	r3, r3, #24
 1236 0168 A0209FE5 		ldr	r2, .L6+4
 1237 016c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1238 0170 0220C3E5 		strb	r2, [r3, #2]
 123:../reversi8_2018.c ****     candidatas[3][5] = SI;
 1239              		.loc 1 123 0
 1240 0174 1C301BE5 		ldr	r3, [fp, #-28]
 1241 0178 183083E2 		add	r3, r3, #24
 1242 017c 8C209FE5 		ldr	r2, .L6+4
 1243 0180 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1244 0184 0520C3E5 		strb	r2, [r3, #5]
 124:../reversi8_2018.c ****     candidatas[4][2] = SI;
 1245              		.loc 1 124 0
 1246 0188 1C301BE5 		ldr	r3, [fp, #-28]
 1247 018c 203083E2 		add	r3, r3, #32
 1248 0190 78209FE5 		ldr	r2, .L6+4
 1249 0194 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1250 0198 0220C3E5 		strb	r2, [r3, #2]
 125:../reversi8_2018.c ****     candidatas[4][5] = SI;
 1251              		.loc 1 125 0
 1252 019c 1C301BE5 		ldr	r3, [fp, #-28]
 1253 01a0 203083E2 		add	r3, r3, #32
 1254 01a4 64209FE5 		ldr	r2, .L6+4
 1255 01a8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1256 01ac 0520C3E5 		strb	r2, [r3, #5]
 126:../reversi8_2018.c ****     candidatas[5][2] = SI;
 1257              		.loc 1 126 0
 1258 01b0 1C301BE5 		ldr	r3, [fp, #-28]
 1259 01b4 283083E2 		add	r3, r3, #40
 1260 01b8 50209FE5 		ldr	r2, .L6+4
 1261 01bc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1262 01c0 0220C3E5 		strb	r2, [r3, #2]
 127:../reversi8_2018.c ****     candidatas[5][3] = SI;
 1263              		.loc 1 127 0
 1264 01c4 1C301BE5 		ldr	r3, [fp, #-28]
 1265 01c8 283083E2 		add	r3, r3, #40
 1266 01cc 3C209FE5 		ldr	r2, .L6+4
 1267 01d0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1268 01d4 0320C3E5 		strb	r2, [r3, #3]
 128:../reversi8_2018.c ****     candidatas[5][4] = SI;
 1269              		.loc 1 128 0
 1270 01d8 1C301BE5 		ldr	r3, [fp, #-28]
 1271 01dc 283083E2 		add	r3, r3, #40
 1272 01e0 28209FE5 		ldr	r2, .L6+4
 1273 01e4 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1274 01e8 0420C3E5 		strb	r2, [r3, #4]
 129:../reversi8_2018.c ****     candidatas[5][5] = SI;
 1275              		.loc 1 129 0
 1276 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 1277 01f0 283083E2 		add	r3, r3, #40
 1278 01f4 14209FE5 		ldr	r2, .L6+4
 1279 01f8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1280 01fc 0520C3E5 		strb	r2, [r3, #5]
 130:../reversi8_2018.c **** }
 1281              		.loc 1 130 0
 1282 0200 0CD04BE2 		sub	sp, fp, #12
 1283 0204 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1284 0208 1EFF2FE1 		bx	lr
 1285              	.L7:
 1286              		.align	2
 1287              	.L6:
 1288 020c 00000000 		.word	CASILLA_OCUPADA
 1289 0210 00000000 		.word	SI
 1290              		.cfi_endproc
 1291              	.LFE0:
 1293              		.align	2
 1294              		.global	esperar_mov
 1296              	esperar_mov:
 1297              	.LFB1:
 131:../reversi8_2018.c **** 
 132:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 133:../reversi8_2018.c **** // Espera a que ready valga 1.
 134:../reversi8_2018.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 135:../reversi8_2018.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 136:../reversi8_2018.c **** 
 137:../reversi8_2018.c **** void esperar_mov(char *ready)
 138:../reversi8_2018.c **** {
 1298              		.loc 1 138 0
 1299              		.cfi_startproc
 1300              		@ Function supports interworking.
 1301              		@ args = 0, pretend = 0, frame = 8
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
 1303 0214 0DC0A0E1 		mov	ip, sp
 1304              	.LCFI2:
 1305              		.cfi_def_cfa_register 12
 1306 0218 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1307 021c 04B04CE2 		sub	fp, ip, #4
 1308              		.cfi_offset 14, -8
 1309              		.cfi_offset 13, -12
 1310              		.cfi_offset 11, -16
 1311              	.LCFI3:
 1312              		.cfi_def_cfa 11, 4
 1313 0220 08D04DE2 		sub	sp, sp, #8
 1314 0224 10000BE5 		str	r0, [fp, #-16]
 139:../reversi8_2018.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1315              		.loc 1 139 0
 1316 0228 0000A0E1 		mov	r0, r0	@ nop
 1317              	.L9:
 1318              		.loc 1 139 0 is_stmt 0 discriminator 1
 1319 022c 10301BE5 		ldr	r3, [fp, #-16]
 1320 0230 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1321 0234 000053E3 		cmp	r3, #0
 1322 0238 FBFFFF0A 		beq	.L9
 140:../reversi8_2018.c **** 
 141:../reversi8_2018.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 1323              		.loc 1 141 0 is_stmt 1
 1324 023c 10301BE5 		ldr	r3, [fp, #-16]
 1325 0240 0020A0E3 		mov	r2, #0
 1326 0244 0020C3E5 		strb	r2, [r3, #0]
 142:../reversi8_2018.c **** }
 1327              		.loc 1 142 0
 1328 0248 0CD04BE2 		sub	sp, fp, #12
 1329 024c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1330 0250 1EFF2FE1 		bx	lr
 1331              		.cfi_endproc
 1332              	.LFE1:
 1334              		.align	2
 1335              		.global	ficha_valida
 1337              	ficha_valida:
 1338              	.LFB2:
 143:../reversi8_2018.c **** 
 144:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 145:../reversi8_2018.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 146:../reversi8_2018.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 147:../reversi8_2018.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 148:../reversi8_2018.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 149:../reversi8_2018.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 150:../reversi8_2018.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 151:../reversi8_2018.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 152:../reversi8_2018.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 153:../reversi8_2018.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 154:../reversi8_2018.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 155:../reversi8_2018.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 156:../reversi8_2018.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 157:../reversi8_2018.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 158:../reversi8_2018.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 159:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 160:../reversi8_2018.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 161:../reversi8_2018.c **** // Además informa si la posición es válida y contiene alguna ficha.
 162:../reversi8_2018.c **** // Esto lo hace por referencia (en *posicion_valida)
 163:../reversi8_2018.c **** // Si devuelve un 0 no es válida o está vacia.
 164:../reversi8_2018.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 165:../reversi8_2018.c **** {
 1339              		.loc 1 165 0
 1340              		.cfi_startproc
 1341              		@ Function supports interworking.
 1342              		@ args = 0, pretend = 0, frame = 24
 1343              		@ frame_needed = 1, uses_anonymous_args = 0
 1344 0254 0DC0A0E1 		mov	ip, sp
 1345              	.LCFI4:
 1346              		.cfi_def_cfa_register 12
 1347 0258 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1348 025c 04B04CE2 		sub	fp, ip, #4
 1349              		.cfi_offset 14, -8
 1350              		.cfi_offset 13, -12
 1351              		.cfi_offset 11, -16
 1352              	.LCFI5:
 1353              		.cfi_def_cfa 11, 4
 1354 0260 18D04DE2 		sub	sp, sp, #24
 1355 0264 18000BE5 		str	r0, [fp, #-24]
 1356 0268 20300BE5 		str	r3, [fp, #-32]
 1357 026c 0130A0E1 		mov	r3, r1
 1358 0270 19304BE5 		strb	r3, [fp, #-25]
 1359 0274 0230A0E1 		mov	r3, r2
 1360 0278 1A304BE5 		strb	r3, [fp, #-26]
 166:../reversi8_2018.c ****     char ficha;
 167:../reversi8_2018.c **** 
 168:../reversi8_2018.c ****     // ficha = tablero[f][c];
 169:../reversi8_2018.c ****     // no puede accederse a tablero[f][c]
 170:../reversi8_2018.c ****     // ya que algún índice puede ser negativo
 171:../reversi8_2018.c **** 
 172:../reversi8_2018.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1361              		.loc 1 172 0
 1362 027c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1363 0280 070053E3 		cmp	r3, #7
 1364 0284 1500008A 		bhi	.L11
 1365              		.loc 1 172 0 is_stmt 0 discriminator 1
 1366 0288 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1367 028c 070053E3 		cmp	r3, #7
 1368 0290 1200008A 		bhi	.L11
 1369 0294 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1370 0298 8331A0E1 		mov	r3, r3, asl #3
 1371 029c 18201BE5 		ldr	r2, [fp, #-24]
 1372 02a0 032082E0 		add	r2, r2, r3
 1373 02a4 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1374 02a8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1375 02ac 000053E3 		cmp	r3, #0
 1376 02b0 0A00000A 		beq	.L11
 173:../reversi8_2018.c ****     {
 174:../reversi8_2018.c ****         *posicion_valida = 1;
 1377              		.loc 1 174 0 is_stmt 1
 1378 02b4 20301BE5 		ldr	r3, [fp, #-32]
 1379 02b8 0120A0E3 		mov	r2, #1
 1380 02bc 002083E5 		str	r2, [r3, #0]
 175:../reversi8_2018.c ****         ficha = tablero[f][c];
 1381              		.loc 1 175 0
 1382 02c0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1383 02c4 8331A0E1 		mov	r3, r3, asl #3
 1384 02c8 18201BE5 		ldr	r2, [fp, #-24]
 1385 02cc 032082E0 		add	r2, r2, r3
 1386 02d0 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1387 02d4 0330D2E7 		ldrb	r3, [r2, r3]
 1388 02d8 0D304BE5 		strb	r3, [fp, #-13]
 1389 02dc 040000EA 		b	.L12
 1390              	.L11:
 176:../reversi8_2018.c ****     }
 177:../reversi8_2018.c ****     else
 178:../reversi8_2018.c ****     {
 179:../reversi8_2018.c ****         *posicion_valida = 0;
 1391              		.loc 1 179 0
 1392 02e0 20301BE5 		ldr	r3, [fp, #-32]
 1393 02e4 0020A0E3 		mov	r2, #0
 1394 02e8 002083E5 		str	r2, [r3, #0]
 180:../reversi8_2018.c ****         ficha = CASILLA_VACIA;
 1395              		.loc 1 180 0
 1396 02ec 0030A0E3 		mov	r3, #0
 1397 02f0 0D304BE5 		strb	r3, [fp, #-13]
 1398              	.L12:
 181:../reversi8_2018.c ****     }
 182:../reversi8_2018.c ****     return ficha;
 1399              		.loc 1 182 0
 1400 02f4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 183:../reversi8_2018.c **** }
 1401              		.loc 1 183 0
 1402 02f8 0300A0E1 		mov	r0, r3
 1403 02fc 0CD04BE2 		sub	sp, fp, #12
 1404 0300 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1405 0304 1EFF2FE1 		bx	lr
 1406              		.cfi_endproc
 1407              	.LFE2:
 1409              		.align	2
 1410              		.global	patron_volteo
 1412              	patron_volteo:
 1413              	.LFB3:
 184:../reversi8_2018.c **** 
 185:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 186:../reversi8_2018.c **** // La función patrón volteo es una función recursiva que busca el patrón de volteo
 187:../reversi8_2018.c **** // (n fichas del rival seguidas de una ficha del jugador actual) en una dirección determinada
 188:../reversi8_2018.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 189:../reversi8_2018.c **** // color indica el color de la pieza que se acaba de colocar
 190:../reversi8_2018.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 191:../reversi8_2018.c **** // FA y CA son la fila y columna a analizar
 192:../reversi8_2018.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 193:../reversi8_2018.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 194:../reversi8_2018.c **** {
 1414              		.loc 1 194 0
 1415              		.cfi_startproc
 1416              		@ Function supports interworking.
 1417              		@ args = 12, pretend = 0, frame = 32
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0308 0DC0A0E1 		mov	ip, sp
 1420              	.LCFI6:
 1421              		.cfi_def_cfa_register 12
 1422 030c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1423 0310 04B04CE2 		sub	fp, ip, #4
 1424              		.cfi_offset 14, -8
 1425              		.cfi_offset 13, -12
 1426              		.cfi_offset 11, -16
 1427              	.LCFI7:
 1428              		.cfi_def_cfa 11, 4
 1429 0314 30D04DE2 		sub	sp, sp, #48
 1430 0318 20000BE5 		str	r0, [fp, #-32]
 1431 031c 24100BE5 		str	r1, [fp, #-36]
 1432 0320 25204BE5 		strb	r2, [fp, #-37]
 1433 0324 26304BE5 		strb	r3, [fp, #-38]
 195:../reversi8_2018.c ****     int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 196:../reversi8_2018.c ****     int patron; //indica si se ha encontrado un patrón o no
 197:../reversi8_2018.c ****     char casilla;   // casilla es la casilla que se lee del tablero
 198:../reversi8_2018.c ****     FA = FA + SF;
 1434              		.loc 1 198 0
 1435 0328 25205BE5 		ldrb	r2, [fp, #-37]
 1436 032c 0430DBE5 		ldrb	r3, [fp, #4]
 1437 0330 033082E0 		add	r3, r2, r3
 1438 0334 25304BE5 		strb	r3, [fp, #-37]
 199:../reversi8_2018.c ****     CA = CA + SC;
 1439              		.loc 1 199 0
 1440 0338 26205BE5 		ldrb	r2, [fp, #-38]
 1441 033c 0830DBE5 		ldrb	r3, [fp, #8]
 1442 0340 033082E0 		add	r3, r2, r3
 1443 0344 26304BE5 		strb	r3, [fp, #-38]
 200:../reversi8_2018.c ****     casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1444              		.loc 1 200 0
 1445 0348 25105BE5 		ldrb	r1, [fp, #-37]	@ zero_extendqisi2
 1446 034c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1447 0350 18304BE2 		sub	r3, fp, #24
 1448 0354 20001BE5 		ldr	r0, [fp, #-32]
 1449 0358 FEFFFFEB 		bl	ficha_valida
 1450 035c 0030A0E1 		mov	r3, r0
 1451 0360 0D304BE5 		strb	r3, [fp, #-13]
 201:../reversi8_2018.c ****     // mientras la casilla está en el tablero, no está vacía,
 202:../reversi8_2018.c ****     // y es del color rival seguimos buscando el patron de volteo
 203:../reversi8_2018.c ****     if ((posicion_valida == 1) && (casilla != color))
 1452              		.loc 1 203 0
 1453 0364 18301BE5 		ldr	r3, [fp, #-24]
 1454 0368 010053E3 		cmp	r3, #1
 1455 036c 1600001A 		bne	.L14
 1456              		.loc 1 203 0 is_stmt 0 discriminator 1
 1457 0370 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1458 0374 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1459 0378 030052E1 		cmp	r2, r3
 1460 037c 1200000A 		beq	.L14
 204:../reversi8_2018.c ****     {
 205:../reversi8_2018.c ****         *longitud = *longitud + 1;
 1461              		.loc 1 205 0 is_stmt 1
 1462 0380 24301BE5 		ldr	r3, [fp, #-36]
 1463 0384 003093E5 		ldr	r3, [r3, #0]
 1464 0388 012083E2 		add	r2, r3, #1
 1465 038c 24301BE5 		ldr	r3, [fp, #-36]
 1466 0390 002083E5 		str	r2, [r3, #0]
 206:../reversi8_2018.c ****         patron = patron_volteo(tablero, longitud, FA, CA, SF, SC, color);
 1467              		.loc 1 206 0
 1468 0394 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 1469 0398 26305BE5 		ldrb	r3, [fp, #-38]	@ zero_extendqisi2
 1470 039c 0410DBE5 		ldrb	r1, [fp, #4]	@ zero_extendqisi2
 1471 03a0 00108DE5 		str	r1, [sp, #0]
 1472 03a4 0810DBE5 		ldrb	r1, [fp, #8]	@ zero_extendqisi2
 1473 03a8 04108DE5 		str	r1, [sp, #4]
 1474 03ac 0C10DBE5 		ldrb	r1, [fp, #12]	@ zero_extendqisi2
 1475 03b0 08108DE5 		str	r1, [sp, #8]
 1476 03b4 20001BE5 		ldr	r0, [fp, #-32]
 1477 03b8 24101BE5 		ldr	r1, [fp, #-36]
 1478 03bc FEFFFFEB 		bl	patron_volteo
 1479 03c0 14000BE5 		str	r0, [fp, #-20]
 207:../reversi8_2018.c ****         //printf("longitud: %d \n", *longitud);
 208:../reversi8_2018.c ****         //printf("fila: %d; columna: %d \n", FA, CA);
 209:../reversi8_2018.c ****         return patron;
 1480              		.loc 1 209 0
 1481 03c4 14301BE5 		ldr	r3, [fp, #-20]
 1482 03c8 0F0000EA 		b	.L15
 1483              	.L14:
 210:../reversi8_2018.c ****     }
 211:../reversi8_2018.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 212:../reversi8_2018.c ****     // entonces hemos encontrado el patrón
 213:../reversi8_2018.c ****     else if ((posicion_valida == 1) && (casilla == color))
 1484              		.loc 1 213 0
 1485 03cc 18301BE5 		ldr	r3, [fp, #-24]
 1486 03d0 010053E3 		cmp	r3, #1
 1487 03d4 0B00001A 		bne	.L16
 1488              		.loc 1 213 0 is_stmt 0 discriminator 1
 1489 03d8 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1490 03dc 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1491 03e0 030052E1 		cmp	r2, r3
 1492 03e4 0700001A 		bne	.L16
 214:../reversi8_2018.c ****     {
 215:../reversi8_2018.c ****         if (*longitud > 0) // longitud indica cuantas fichas hay que voltear
 1493              		.loc 1 215 0 is_stmt 1
 1494 03e8 24301BE5 		ldr	r3, [fp, #-36]
 1495 03ec 003093E5 		ldr	r3, [r3, #0]
 1496 03f0 000053E3 		cmp	r3, #0
 1497 03f4 010000DA 		ble	.L17
 216:../reversi8_2018.c ****             {
 217:../reversi8_2018.c ****             return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el pat
 1498              		.loc 1 217 0
 1499 03f8 0130A0E3 		mov	r3, #1
 1500 03fc 020000EA 		b	.L15
 1501              	.L17:
 218:../reversi8_2018.c ****             //printf("PATRON_ENCONTRADO \n");
 219:../reversi8_2018.c ****             }
 220:../reversi8_2018.c ****         else {
 221:../reversi8_2018.c ****             return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1502              		.loc 1 221 0
 1503 0400 0030A0E3 		mov	r3, #0
 1504 0404 000000EA 		b	.L15
 1505              	.L16:
 222:../reversi8_2018.c ****             //printf("NO_HAY_PATRON \n");
 223:../reversi8_2018.c ****             }
 224:../reversi8_2018.c ****     }
 225:../reversi8_2018.c ****     // en caso contrario es que no hay patrón
 226:../reversi8_2018.c ****     else
 227:../reversi8_2018.c ****     {
 228:../reversi8_2018.c ****         return NO_HAY_PATRON;
 1506              		.loc 1 228 0
 1507 0408 0030A0E3 		mov	r3, #0
 1508              	.L15:
 229:../reversi8_2018.c ****         //printf("NO_HAY_PATRON \n");
 230:../reversi8_2018.c ****     }
 231:../reversi8_2018.c **** }
 1509              		.loc 1 231 0
 1510 040c 0300A0E1 		mov	r0, r3
 1511 0410 0CD04BE2 		sub	sp, fp, #12
 1512 0414 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1513 0418 1EFF2FE1 		bx	lr
 1514              		.cfi_endproc
 1515              	.LFE3:
 1517              		.align	2
 1518              		.global	voltear
 1520              	voltear:
 1521              	.LFB4:
 232:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 233:../reversi8_2018.c **** // voltea n fichas en la dirección que toque
 234:../reversi8_2018.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 235:../reversi8_2018.c **** // color indica el color de la pieza que se acaba de colocar
 236:../reversi8_2018.c **** // FA y CA son la fila y columna a analizar
 237:../reversi8_2018.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 238:../reversi8_2018.c **** {
 1522              		.loc 1 238 0
 1523              		.cfi_startproc
 1524              		@ Function supports interworking.
 1525              		@ args = 12, pretend = 0, frame = 16
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527 041c 0DC0A0E1 		mov	ip, sp
 1528              	.LCFI8:
 1529              		.cfi_def_cfa_register 12
 1530 0420 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1531 0424 04B04CE2 		sub	fp, ip, #4
 1532              		.cfi_offset 14, -8
 1533              		.cfi_offset 13, -12
 1534              		.cfi_offset 11, -16
 1535              	.LCFI9:
 1536              		.cfi_def_cfa 11, 4
 1537 0428 10D04DE2 		sub	sp, sp, #16
 1538 042c 18000BE5 		str	r0, [fp, #-24]
 1539 0430 19104BE5 		strb	r1, [fp, #-25]
 1540 0434 1A204BE5 		strb	r2, [fp, #-26]
 1541 0438 1B304BE5 		strb	r3, [fp, #-27]
 239:../reversi8_2018.c ****     int i;
 240:../reversi8_2018.c **** 
 241:../reversi8_2018.c ****     for (i = 0; i < n; i++)
 1542              		.loc 1 241 0
 1543 043c 0030A0E3 		mov	r3, #0
 1544 0440 10300BE5 		str	r3, [fp, #-16]
 1545 0444 110000EA 		b	.L19
 1546              	.L20:
 242:../reversi8_2018.c ****     {
 243:../reversi8_2018.c ****         FA = FA + SF;
 1547              		.loc 1 243 0 discriminator 2
 1548 0448 19205BE5 		ldrb	r2, [fp, #-25]
 1549 044c 1B305BE5 		ldrb	r3, [fp, #-27]
 1550 0450 033082E0 		add	r3, r2, r3
 1551 0454 19304BE5 		strb	r3, [fp, #-25]
 244:../reversi8_2018.c ****         CA = CA + SC;
 1552              		.loc 1 244 0 discriminator 2
 1553 0458 1A205BE5 		ldrb	r2, [fp, #-26]
 1554 045c 0430DBE5 		ldrb	r3, [fp, #4]
 1555 0460 033082E0 		add	r3, r2, r3
 1556 0464 1A304BE5 		strb	r3, [fp, #-26]
 245:../reversi8_2018.c ****         tablero[FA][CA] = color;
 1557              		.loc 1 245 0 discriminator 2
 1558 0468 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1559 046c 8331A0E1 		mov	r3, r3, asl #3
 1560 0470 18201BE5 		ldr	r2, [fp, #-24]
 1561 0474 032082E0 		add	r2, r2, r3
 1562 0478 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1563 047c 0C10DBE5 		ldrb	r1, [fp, #12]
 1564 0480 0310C2E7 		strb	r1, [r2, r3]
 241:../reversi8_2018.c ****     for (i = 0; i < n; i++)
 1565              		.loc 1 241 0 discriminator 2
 1566 0484 10301BE5 		ldr	r3, [fp, #-16]
 1567 0488 013083E2 		add	r3, r3, #1
 1568 048c 10300BE5 		str	r3, [fp, #-16]
 1569              	.L19:
 241:../reversi8_2018.c ****     for (i = 0; i < n; i++)
 1570              		.loc 1 241 0 is_stmt 0 discriminator 1
 1571 0490 10201BE5 		ldr	r2, [fp, #-16]
 1572 0494 08309BE5 		ldr	r3, [fp, #8]
 1573 0498 030052E1 		cmp	r2, r3
 1574 049c E9FFFFBA 		blt	.L20
 246:../reversi8_2018.c ****     }
 247:../reversi8_2018.c **** }
 1575              		.loc 1 247 0 is_stmt 1
 1576 04a0 0CD04BE2 		sub	sp, fp, #12
 1577 04a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1578 04a8 1EFF2FE1 		bx	lr
 1579              		.cfi_endproc
 1580              	.LFE4:
 1582              		.align	2
 1583              		.global	actualizar_tablero
 1585              	actualizar_tablero:
 1586              	.LFB5:
 248:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 249:../reversi8_2018.c **** // comprueba si hay que actualizar alguna ficha
 250:../reversi8_2018.c **** // no comprueba que el movimiento realizado sea válido
 251:../reversi8_2018.c **** // f y c son la fila y columna a analizar
 252:../reversi8_2018.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 253:../reversi8_2018.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 254:../reversi8_2018.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 255:../reversi8_2018.c **** {
 1587              		.loc 1 255 0
 1588              		.cfi_startproc
 1589              		@ Function supports interworking.
 1590              		@ args = 0, pretend = 0, frame = 24
 1591              		@ frame_needed = 1, uses_anonymous_args = 0
 1592 04ac 0DC0A0E1 		mov	ip, sp
 1593              	.LCFI10:
 1594              		.cfi_def_cfa_register 12
 1595 04b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1596 04b4 04B04CE2 		sub	fp, ip, #4
 1597              		.cfi_offset 14, -8
 1598              		.cfi_offset 13, -12
 1599              		.cfi_offset 11, -16
 1600              	.LCFI11:
 1601              		.cfi_def_cfa 11, 4
 1602 04b8 28D04DE2 		sub	sp, sp, #40
 1603 04bc 20000BE5 		str	r0, [fp, #-32]
 1604 04c0 21104BE5 		strb	r1, [fp, #-33]
 1605 04c4 22204BE5 		strb	r2, [fp, #-34]
 1606 04c8 23304BE5 		strb	r3, [fp, #-35]
 256:../reversi8_2018.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 257:../reversi8_2018.c ****     int i, flip, patron;
 258:../reversi8_2018.c **** 
 259:../reversi8_2018.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1607              		.loc 1 259 0
 1608 04cc 0030A0E3 		mov	r3, #0
 1609 04d0 10300BE5 		str	r3, [fp, #-16]
 1610 04d4 280000EA 		b	.L22
 1611              	.L24:
 260:../reversi8_2018.c ****     {
 261:../reversi8_2018.c ****         SF = vSF[i];
 1612              		.loc 1 261 0
 1613 04d8 BC209FE5 		ldr	r2, .L25
 1614 04dc 10301BE5 		ldr	r3, [fp, #-16]
 1615 04e0 033082E0 		add	r3, r2, r3
 1616 04e4 0030D3E5 		ldrb	r3, [r3, #0]
 1617 04e8 11304BE5 		strb	r3, [fp, #-17]
 262:../reversi8_2018.c ****         SC = vSC[i];
 1618              		.loc 1 262 0
 1619 04ec AC209FE5 		ldr	r2, .L25+4
 1620 04f0 10301BE5 		ldr	r3, [fp, #-16]
 1621 04f4 033082E0 		add	r3, r2, r3
 1622 04f8 0030D3E5 		ldrb	r3, [r3, #0]
 1623 04fc 12304BE5 		strb	r3, [fp, #-18]
 263:../reversi8_2018.c ****         // flip: numero de fichas a voltear
 264:../reversi8_2018.c ****         flip = 0;
 1624              		.loc 1 264 0
 1625 0500 0030A0E3 		mov	r3, #0
 1626 0504 1C300BE5 		str	r3, [fp, #-28]
 265:../reversi8_2018.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 1627              		.loc 1 265 0
 1628 0508 1C104BE2 		sub	r1, fp, #28
 1629 050c 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 1630 0510 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 1631 0514 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 1632 0518 00008DE5 		str	r0, [sp, #0]
 1633 051c 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 1634 0520 04008DE5 		str	r0, [sp, #4]
 1635 0524 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1636 0528 08008DE5 		str	r0, [sp, #8]
 1637 052c 20001BE5 		ldr	r0, [fp, #-32]
 1638 0530 FEFFFFEB 		bl	patron_volteo
 1639 0534 18000BE5 		str	r0, [fp, #-24]
 266:../reversi8_2018.c ****         //printf("Flip: %d \n", flip);
 267:../reversi8_2018.c ****         if (patron == PATRON_ENCONTRADO )
 1640              		.loc 1 267 0
 1641 0538 18301BE5 		ldr	r3, [fp, #-24]
 1642 053c 010053E3 		cmp	r3, #1
 1643 0540 0A00001A 		bne	.L23
 268:../reversi8_2018.c ****         {
 269:../reversi8_2018.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1644              		.loc 1 269 0
 1645 0544 1C001BE5 		ldr	r0, [fp, #-28]
 1646 0548 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 1647 054c 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 1648 0550 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1649 0554 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 1650 0558 00C08DE5 		str	ip, [sp, #0]
 1651 055c 04008DE5 		str	r0, [sp, #4]
 1652 0560 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1653 0564 08008DE5 		str	r0, [sp, #8]
 1654 0568 20001BE5 		ldr	r0, [fp, #-32]
 1655 056c FEFFFFEB 		bl	voltear
 1656              	.L23:
 259:../reversi8_2018.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1657              		.loc 1 259 0
 1658 0570 10301BE5 		ldr	r3, [fp, #-16]
 1659 0574 013083E2 		add	r3, r3, #1
 1660 0578 10300BE5 		str	r3, [fp, #-16]
 1661              	.L22:
 259:../reversi8_2018.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1662              		.loc 1 259 0 is_stmt 0 discriminator 1
 1663 057c 10301BE5 		ldr	r3, [fp, #-16]
 1664 0580 070053E3 		cmp	r3, #7
 1665 0584 D3FFFFDA 		ble	.L24
 270:../reversi8_2018.c ****         }
 271:../reversi8_2018.c ****     }
 272:../reversi8_2018.c ****     return 0;
 1666              		.loc 1 272 0 is_stmt 1
 1667 0588 0030A0E3 		mov	r3, #0
 273:../reversi8_2018.c **** }
 1668              		.loc 1 273 0
 1669 058c 0300A0E1 		mov	r0, r3
 1670 0590 0CD04BE2 		sub	sp, fp, #12
 1671 0594 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1672 0598 1EFF2FE1 		bx	lr
 1673              	.L26:
 1674              		.align	2
 1675              	.L25:
 1676 059c 00000000 		.word	vSF
 1677 05a0 00000000 		.word	vSC
 1678              		.cfi_endproc
 1679              	.LFE5:
 1681              		.align	2
 1682              		.global	elegir_mov
 1684              	elegir_mov:
 1685              	.LFB6:
 274:../reversi8_2018.c **** 
 275:../reversi8_2018.c **** /////////////////////////////////////////////////////////////////////////////////
 276:../reversi8_2018.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 277:../reversi8_2018.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 278:../reversi8_2018.c **** // que se ha encontrado la guarda
 279:../reversi8_2018.c **** // Al acabar escribe el movimiento seleccionado en f y c
 280:../reversi8_2018.c **** 
 281:../reversi8_2018.c **** // Candidatas
 282:../reversi8_2018.c **** // NO    0
 283:../reversi8_2018.c **** // SI    1
 284:../reversi8_2018.c **** // CASILLA_OCUPADA 2
 285:../reversi8_2018.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 286:../reversi8_2018.c **** {
 1686              		.loc 1 286 0
 1687              		.cfi_startproc
 1688              		@ Function supports interworking.
 1689              		@ args = 0, pretend = 0, frame = 56
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691 05a4 0DC0A0E1 		mov	ip, sp
 1692              	.LCFI12:
 1693              		.cfi_def_cfa_register 12
 1694 05a8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1695 05ac 04B04CE2 		sub	fp, ip, #4
 1696              		.cfi_offset 14, -8
 1697              		.cfi_offset 13, -12
 1698              		.cfi_offset 11, -16
 1699              	.LCFI13:
 1700              		.cfi_def_cfa 11, 4
 1701 05b0 48D04DE2 		sub	sp, sp, #72
 1702 05b4 38000BE5 		str	r0, [fp, #-56]
 1703 05b8 3C100BE5 		str	r1, [fp, #-60]
 1704 05bc 40200BE5 		str	r2, [fp, #-64]
 1705 05c0 44300BE5 		str	r3, [fp, #-68]
 287:../reversi8_2018.c ****     int i, j, k, found;
 288:../reversi8_2018.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1706              		.loc 1 288 0
 1707 05c4 0030E0E3 		mvn	r3, #0
 1708 05c8 20300BE5 		str	r3, [fp, #-32]
 289:../reversi8_2018.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 290:../reversi8_2018.c ****     char mejor = 0; // almacena el mejor valor encontrado
 1709              		.loc 1 290 0
 1710 05cc 0030A0E3 		mov	r3, #0
 1711 05d0 25304BE5 		strb	r3, [fp, #-37]
 291:../reversi8_2018.c ****     int patron, longitud;
 292:../reversi8_2018.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 293:../reversi8_2018.c **** 
 294:../reversi8_2018.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 295:../reversi8_2018.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 296:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1712              		.loc 1 296 0
 1713 05d4 0030A0E3 		mov	r3, #0
 1714 05d8 10300BE5 		str	r3, [fp, #-16]
 1715 05dc 620000EA 		b	.L28
 1716              	.L35:
 297:../reversi8_2018.c ****     {
 298:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1717              		.loc 1 298 0
 1718 05e0 0030A0E3 		mov	r3, #0
 1719 05e4 14300BE5 		str	r3, [fp, #-20]
 1720 05e8 590000EA 		b	.L29
 1721              	.L34:
 299:../reversi8_2018.c ****         {   // indica en qué casillas quizá se pueda mover
 300:../reversi8_2018.c ****             if (candidatas[i][j] == SI)
 1722              		.loc 1 300 0
 1723 05ec 10301BE5 		ldr	r3, [fp, #-16]
 1724 05f0 8331A0E1 		mov	r3, r3, asl #3
 1725 05f4 38201BE5 		ldr	r2, [fp, #-56]
 1726 05f8 032082E0 		add	r2, r2, r3
 1727 05fc 14301BE5 		ldr	r3, [fp, #-20]
 1728 0600 033082E0 		add	r3, r2, r3
 1729 0604 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1730 0608 A0319FE5 		ldr	r3, .L36
 1731 060c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1732 0610 030052E1 		cmp	r2, r3
 1733 0614 4B00001A 		bne	.L30
 301:../reversi8_2018.c ****             {
 302:../reversi8_2018.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1734              		.loc 1 302 0
 1735 0618 10301BE5 		ldr	r3, [fp, #-16]
 1736 061c 8331A0E1 		mov	r3, r3, asl #3
 1737 0620 3C201BE5 		ldr	r2, [fp, #-60]
 1738 0624 032082E0 		add	r2, r2, r3
 1739 0628 14301BE5 		ldr	r3, [fp, #-20]
 1740 062c 033082E0 		add	r3, r2, r3
 1741 0630 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1742 0634 000053E3 		cmp	r3, #0
 1743 0638 4200001A 		bne	.L30
 303:../reversi8_2018.c ****                 {
 304:../reversi8_2018.c ****                     found = 0;
 1744              		.loc 1 304 0
 1745 063c 0030A0E3 		mov	r3, #0
 1746 0640 1C300BE5 		str	r3, [fp, #-28]
 305:../reversi8_2018.c ****                     k = 0;
 1747              		.loc 1 305 0
 1748 0644 0030A0E3 		mov	r3, #0
 1749 0648 18300BE5 		str	r3, [fp, #-24]
 306:../reversi8_2018.c **** 
 307:../reversi8_2018.c ****                     // en este bucle comprobamos si es un movimiento válido
 308:../reversi8_2018.c ****                     // (es decir si implica voltear en alguna dirección)
 309:../reversi8_2018.c ****                     while ((found == 0) && (k < DIM))
 1750              		.loc 1 309 0
 1751 064c 370000EA 		b	.L31
 1752              	.L33:
 310:../reversi8_2018.c ****                     {
 311:../reversi8_2018.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 1753              		.loc 1 311 0
 1754 0650 5C219FE5 		ldr	r2, .L36+4
 1755 0654 18301BE5 		ldr	r3, [fp, #-24]
 1756 0658 033082E0 		add	r3, r2, r3
 1757 065c 0030D3E5 		ldrb	r3, [r3, #0]
 1758 0660 26304BE5 		strb	r3, [fp, #-38]
 312:../reversi8_2018.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 1759              		.loc 1 312 0
 1760 0664 4C219FE5 		ldr	r2, .L36+8
 1761 0668 18301BE5 		ldr	r3, [fp, #-24]
 1762 066c 033082E0 		add	r3, r2, r3
 1763 0670 0030D3E5 		ldrb	r3, [r3, #0]
 1764 0674 27304BE5 		strb	r3, [fp, #-39]
 313:../reversi8_2018.c **** 
 314:../reversi8_2018.c ****                         // nos dice qué hay que voltear en cada dirección
 315:../reversi8_2018.c ****                         longitud = 0;
 1765              		.loc 1 315 0
 1766 0678 0030A0E3 		mov	r3, #0
 1767 067c 30300BE5 		str	r3, [fp, #-48]
 316:../reversi8_2018.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 1768              		.loc 1 316 0
 1769 0680 10301BE5 		ldr	r3, [fp, #-16]
 1770 0684 FF2003E2 		and	r2, r3, #255
 1771 0688 14301BE5 		ldr	r3, [fp, #-20]
 1772 068c FF3003E2 		and	r3, r3, #255
 1773 0690 30104BE2 		sub	r1, fp, #48
 1774 0694 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 1775 0698 00008DE5 		str	r0, [sp, #0]
 1776 069c 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 1777 06a0 04008DE5 		str	r0, [sp, #4]
 1778 06a4 0100A0E3 		mov	r0, #1
 1779 06a8 08008DE5 		str	r0, [sp, #8]
 1780 06ac 3C001BE5 		ldr	r0, [fp, #-60]
 1781 06b0 FEFFFFEB 		bl	patron_volteo
 1782 06b4 2C000BE5 		str	r0, [fp, #-44]
 317:../reversi8_2018.c ****                         //  //printf("%d ", patron);
 318:../reversi8_2018.c ****                         if (patron == PATRON_ENCONTRADO)
 1783              		.loc 1 318 0
 1784 06b8 2C301BE5 		ldr	r3, [fp, #-44]
 1785 06bc 010053E3 		cmp	r3, #1
 1786 06c0 1700001A 		bne	.L32
 319:../reversi8_2018.c ****                         {
 320:../reversi8_2018.c ****                             found = 1;
 1787              		.loc 1 320 0
 1788 06c4 0130A0E3 		mov	r3, #1
 1789 06c8 1C300BE5 		str	r3, [fp, #-28]
 321:../reversi8_2018.c ****                             if (tabla_valor[i][j] > mejor)
 1790              		.loc 1 321 0
 1791 06cc E8209FE5 		ldr	r2, .L36+12
 1792 06d0 10301BE5 		ldr	r3, [fp, #-16]
 1793 06d4 8311A0E1 		mov	r1, r3, asl #3
 1794 06d8 14301BE5 		ldr	r3, [fp, #-20]
 1795 06dc 033081E0 		add	r3, r1, r3
 1796 06e0 033082E0 		add	r3, r2, r3
 1797 06e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1798 06e8 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 1799 06ec 030052E1 		cmp	r2, r3
 1800 06f0 0B00002A 		bcs	.L32
 322:../reversi8_2018.c ****                             {
 323:../reversi8_2018.c ****                                 mf = i;
 1801              		.loc 1 323 0
 1802 06f4 10301BE5 		ldr	r3, [fp, #-16]
 1803 06f8 20300BE5 		str	r3, [fp, #-32]
 324:../reversi8_2018.c ****                                 mc = j;
 1804              		.loc 1 324 0
 1805 06fc 14301BE5 		ldr	r3, [fp, #-20]
 1806 0700 24300BE5 		str	r3, [fp, #-36]
 325:../reversi8_2018.c ****                                 mejor = tabla_valor[i][j];
 1807              		.loc 1 325 0
 1808 0704 B0209FE5 		ldr	r2, .L36+12
 1809 0708 10301BE5 		ldr	r3, [fp, #-16]
 1810 070c 8311A0E1 		mov	r1, r3, asl #3
 1811 0710 14301BE5 		ldr	r3, [fp, #-20]
 1812 0714 033081E0 		add	r3, r1, r3
 1813 0718 033082E0 		add	r3, r2, r3
 1814 071c 0030D3E5 		ldrb	r3, [r3, #0]
 1815 0720 25304BE5 		strb	r3, [fp, #-37]
 1816              	.L32:
 326:../reversi8_2018.c ****                             }
 327:../reversi8_2018.c ****                         }
 328:../reversi8_2018.c ****                         k++;
 1817              		.loc 1 328 0
 1818 0724 18301BE5 		ldr	r3, [fp, #-24]
 1819 0728 013083E2 		add	r3, r3, #1
 1820 072c 18300BE5 		str	r3, [fp, #-24]
 1821              	.L31:
 309:../reversi8_2018.c ****                     while ((found == 0) && (k < DIM))
 1822              		.loc 1 309 0 discriminator 1
 1823 0730 1C301BE5 		ldr	r3, [fp, #-28]
 1824 0734 000053E3 		cmp	r3, #0
 1825 0738 0200001A 		bne	.L30
 309:../reversi8_2018.c ****                     while ((found == 0) && (k < DIM))
 1826              		.loc 1 309 0 is_stmt 0 discriminator 2
 1827 073c 18301BE5 		ldr	r3, [fp, #-24]
 1828 0740 070053E3 		cmp	r3, #7
 1829 0744 C1FFFFDA 		ble	.L33
 1830              	.L30:
 298:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1831              		.loc 1 298 0 is_stmt 1
 1832 0748 14301BE5 		ldr	r3, [fp, #-20]
 1833 074c 013083E2 		add	r3, r3, #1
 1834 0750 14300BE5 		str	r3, [fp, #-20]
 1835              	.L29:
 298:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1836              		.loc 1 298 0 is_stmt 0 discriminator 1
 1837 0754 14301BE5 		ldr	r3, [fp, #-20]
 1838 0758 070053E3 		cmp	r3, #7
 1839 075c A2FFFFDA 		ble	.L34
 296:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1840              		.loc 1 296 0 is_stmt 1
 1841 0760 10301BE5 		ldr	r3, [fp, #-16]
 1842 0764 013083E2 		add	r3, r3, #1
 1843 0768 10300BE5 		str	r3, [fp, #-16]
 1844              	.L28:
 296:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1845              		.loc 1 296 0 is_stmt 0 discriminator 1
 1846 076c 10301BE5 		ldr	r3, [fp, #-16]
 1847 0770 070053E3 		cmp	r3, #7
 1848 0774 99FFFFDA 		ble	.L35
 329:../reversi8_2018.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 330:../reversi8_2018.c ****                     }
 331:../reversi8_2018.c ****                 }
 332:../reversi8_2018.c ****             }
 333:../reversi8_2018.c ****         }
 334:../reversi8_2018.c ****     }
 335:../reversi8_2018.c ****     *f = (char) mf;
 1849              		.loc 1 335 0 is_stmt 1
 1850 0778 20301BE5 		ldr	r3, [fp, #-32]
 1851 077c FF2003E2 		and	r2, r3, #255
 1852 0780 40301BE5 		ldr	r3, [fp, #-64]
 1853 0784 0020C3E5 		strb	r2, [r3, #0]
 336:../reversi8_2018.c ****     *c = (char) mc;
 1854              		.loc 1 336 0
 1855 0788 24301BE5 		ldr	r3, [fp, #-36]
 1856 078c FF2003E2 		and	r2, r3, #255
 1857 0790 44301BE5 		ldr	r3, [fp, #-68]
 1858 0794 0020C3E5 		strb	r2, [r3, #0]
 337:../reversi8_2018.c ****     leds_off();
 1859              		.loc 1 337 0
 1860 0798 FEFFFFEB 		bl	leds_off
 338:../reversi8_2018.c ****     // si no se ha encontrado una posición válida devuelve -1
 339:../reversi8_2018.c ****     return mf;
 1861              		.loc 1 339 0
 1862 079c 20301BE5 		ldr	r3, [fp, #-32]
 340:../reversi8_2018.c **** }
 1863              		.loc 1 340 0
 1864 07a0 0300A0E1 		mov	r0, r3
 1865 07a4 0CD04BE2 		sub	sp, fp, #12
 1866 07a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1867 07ac 1EFF2FE1 		bx	lr
 1868              	.L37:
 1869              		.align	2
 1870              	.L36:
 1871 07b0 00000000 		.word	SI
 1872 07b4 00000000 		.word	vSF
 1873 07b8 00000000 		.word	vSC
 1874 07bc 08000000 		.word	tabla_valor
 1875              		.cfi_endproc
 1876              	.LFE6:
 1878              		.align	2
 1879              		.global	contar
 1881              	contar:
 1882              	.LFB7:
 341:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 342:../reversi8_2018.c **** // Cuenta el número de fichas de cada color.
 343:../reversi8_2018.c **** // Los guarda en la dirección b (blancas) y n (negras)
 344:../reversi8_2018.c **** void contar(char tablero[][DIM], int *b, int *n)
 345:../reversi8_2018.c **** {
 1883              		.loc 1 345 0
 1884              		.cfi_startproc
 1885              		@ Function supports interworking.
 1886              		@ args = 0, pretend = 0, frame = 24
 1887              		@ frame_needed = 1, uses_anonymous_args = 0
 1888 07c0 0DC0A0E1 		mov	ip, sp
 1889              	.LCFI14:
 1890              		.cfi_def_cfa_register 12
 1891 07c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1892 07c8 04B04CE2 		sub	fp, ip, #4
 1893              		.cfi_offset 14, -8
 1894              		.cfi_offset 13, -12
 1895              		.cfi_offset 11, -16
 1896              	.LCFI15:
 1897              		.cfi_def_cfa 11, 4
 1898 07cc 18D04DE2 		sub	sp, sp, #24
 1899 07d0 18000BE5 		str	r0, [fp, #-24]
 1900 07d4 1C100BE5 		str	r1, [fp, #-28]
 1901 07d8 20200BE5 		str	r2, [fp, #-32]
 346:../reversi8_2018.c ****     int i,j;
 347:../reversi8_2018.c **** 
 348:../reversi8_2018.c ****     *b = 0;
 1902              		.loc 1 348 0
 1903 07dc 1C301BE5 		ldr	r3, [fp, #-28]
 1904 07e0 0020A0E3 		mov	r2, #0
 1905 07e4 002083E5 		str	r2, [r3, #0]
 349:../reversi8_2018.c ****     *n = 0;
 1906              		.loc 1 349 0
 1907 07e8 20301BE5 		ldr	r3, [fp, #-32]
 1908 07ec 0020A0E3 		mov	r2, #0
 1909 07f0 002083E5 		str	r2, [r3, #0]
 350:../reversi8_2018.c **** 
 351:../reversi8_2018.c ****     // recorremos todo el tablero contando las fichas de cada color
 352:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1910              		.loc 1 352 0
 1911 07f4 0030A0E3 		mov	r3, #0
 1912 07f8 10300BE5 		str	r3, [fp, #-16]
 1913 07fc 280000EA 		b	.L39
 1914              	.L44:
 353:../reversi8_2018.c ****     {
 354:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1915              		.loc 1 354 0
 1916 0800 0030A0E3 		mov	r3, #0
 1917 0804 14300BE5 		str	r3, [fp, #-20]
 1918 0808 1F0000EA 		b	.L40
 1919              	.L43:
 355:../reversi8_2018.c ****         {
 356:../reversi8_2018.c ****             if (tablero[i][j] == FICHA_BLANCA)
 1920              		.loc 1 356 0
 1921 080c 10301BE5 		ldr	r3, [fp, #-16]
 1922 0810 8331A0E1 		mov	r3, r3, asl #3
 1923 0814 18201BE5 		ldr	r2, [fp, #-24]
 1924 0818 032082E0 		add	r2, r2, r3
 1925 081c 14301BE5 		ldr	r3, [fp, #-20]
 1926 0820 033082E0 		add	r3, r2, r3
 1927 0824 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1928 0828 010053E3 		cmp	r3, #1
 1929 082c 0500001A 		bne	.L41
 357:../reversi8_2018.c ****             {
 358:../reversi8_2018.c ****                 (*b)++;
 1930              		.loc 1 358 0
 1931 0830 1C301BE5 		ldr	r3, [fp, #-28]
 1932 0834 003093E5 		ldr	r3, [r3, #0]
 1933 0838 012083E2 		add	r2, r3, #1
 1934 083c 1C301BE5 		ldr	r3, [fp, #-28]
 1935 0840 002083E5 		str	r2, [r3, #0]
 1936 0844 0D0000EA 		b	.L42
 1937              	.L41:
 359:../reversi8_2018.c ****             }
 360:../reversi8_2018.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 1938              		.loc 1 360 0
 1939 0848 10301BE5 		ldr	r3, [fp, #-16]
 1940 084c 8331A0E1 		mov	r3, r3, asl #3
 1941 0850 18201BE5 		ldr	r2, [fp, #-24]
 1942 0854 032082E0 		add	r2, r2, r3
 1943 0858 14301BE5 		ldr	r3, [fp, #-20]
 1944 085c 033082E0 		add	r3, r2, r3
 1945 0860 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1946 0864 020053E3 		cmp	r3, #2
 1947 0868 0400001A 		bne	.L42
 361:../reversi8_2018.c ****             {
 362:../reversi8_2018.c ****                 (*n)++;
 1948              		.loc 1 362 0
 1949 086c 20301BE5 		ldr	r3, [fp, #-32]
 1950 0870 003093E5 		ldr	r3, [r3, #0]
 1951 0874 012083E2 		add	r2, r3, #1
 1952 0878 20301BE5 		ldr	r3, [fp, #-32]
 1953 087c 002083E5 		str	r2, [r3, #0]
 1954              	.L42:
 354:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1955              		.loc 1 354 0
 1956 0880 14301BE5 		ldr	r3, [fp, #-20]
 1957 0884 013083E2 		add	r3, r3, #1
 1958 0888 14300BE5 		str	r3, [fp, #-20]
 1959              	.L40:
 354:../reversi8_2018.c ****         for (j=0; j<DIM; j++)
 1960              		.loc 1 354 0 is_stmt 0 discriminator 1
 1961 088c 14301BE5 		ldr	r3, [fp, #-20]
 1962 0890 070053E3 		cmp	r3, #7
 1963 0894 DCFFFFDA 		ble	.L43
 352:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1964              		.loc 1 352 0 is_stmt 1
 1965 0898 10301BE5 		ldr	r3, [fp, #-16]
 1966 089c 013083E2 		add	r3, r3, #1
 1967 08a0 10300BE5 		str	r3, [fp, #-16]
 1968              	.L39:
 352:../reversi8_2018.c ****     for (i=0; i<DIM; i++)
 1969              		.loc 1 352 0 is_stmt 0 discriminator 1
 1970 08a4 10301BE5 		ldr	r3, [fp, #-16]
 1971 08a8 070053E3 		cmp	r3, #7
 1972 08ac D3FFFFDA 		ble	.L44
 363:../reversi8_2018.c ****             }
 364:../reversi8_2018.c ****         }
 365:../reversi8_2018.c ****     }
 366:../reversi8_2018.c **** }
 1973              		.loc 1 366 0 is_stmt 1
 1974 08b0 0CD04BE2 		sub	sp, fp, #12
 1975 08b4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1976 08b8 1EFF2FE1 		bx	lr
 1977              		.cfi_endproc
 1978              	.LFE7:
 1980              		.align	2
 1981              		.global	actualizar_candidatas
 1983              	actualizar_candidatas:
 1984              	.LFB8:
 367:../reversi8_2018.c **** 
 368:../reversi8_2018.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 369:../reversi8_2018.c **** {
 1985              		.loc 1 369 0
 1986              		.cfi_startproc
 1987              		@ Function supports interworking.
 1988              		@ args = 0, pretend = 0, frame = 8
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 08bc 0DC0A0E1 		mov	ip, sp
 1991              	.LCFI16:
 1992              		.cfi_def_cfa_register 12
 1993 08c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1994 08c4 04B04CE2 		sub	fp, ip, #4
 1995              		.cfi_offset 14, -8
 1996              		.cfi_offset 13, -12
 1997              		.cfi_offset 11, -16
 1998              	.LCFI17:
 1999              		.cfi_def_cfa 11, 4
 2000 08c8 08D04DE2 		sub	sp, sp, #8
 2001 08cc 10000BE5 		str	r0, [fp, #-16]
 2002 08d0 0230A0E1 		mov	r3, r2
 2003 08d4 0120A0E1 		mov	r2, r1
 2004 08d8 11204BE5 		strb	r2, [fp, #-17]
 2005 08dc 12304BE5 		strb	r3, [fp, #-18]
 370:../reversi8_2018.c ****     // donde ya se ha colocado no se puede volver a colocar
 371:../reversi8_2018.c ****     // En las posiciones alrededor sí
 372:../reversi8_2018.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2006              		.loc 1 372 0
 2007 08e0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2008 08e4 8331A0E1 		mov	r3, r3, asl #3
 2009 08e8 10201BE5 		ldr	r2, [fp, #-16]
 2010 08ec 032082E0 		add	r2, r2, r3
 2011 08f0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2012 08f4 10139FE5 		ldr	r1, .L54
 2013 08f8 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2014 08fc 0310C2E7 		strb	r1, [r2, r3]
 373:../reversi8_2018.c ****     if (f > 0)
 2015              		.loc 1 373 0
 2016 0900 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2017 0904 000053E3 		cmp	r3, #0
 2018 0908 4500000A 		beq	.L46
 374:../reversi8_2018.c ****     {
 375:../reversi8_2018.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2019              		.loc 1 375 0
 2020 090c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2021 0910 013043E2 		sub	r3, r3, #1
 2022 0914 8331A0E1 		mov	r3, r3, asl #3
 2023 0918 10201BE5 		ldr	r2, [fp, #-16]
 2024 091c 032082E0 		add	r2, r2, r3
 2025 0920 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2026 0924 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2027 0928 DC329FE5 		ldr	r3, .L54
 2028 092c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2029 0930 030052E1 		cmp	r2, r3
 2030 0934 0800000A 		beq	.L47
 376:../reversi8_2018.c ****             candidatas[f-1][c] = SI;
 2031              		.loc 1 376 0
 2032 0938 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2033 093c 013043E2 		sub	r3, r3, #1
 2034 0940 8331A0E1 		mov	r3, r3, asl #3
 2035 0944 10201BE5 		ldr	r2, [fp, #-16]
 2036 0948 032082E0 		add	r2, r2, r3
 2037 094c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2038 0950 B8129FE5 		ldr	r1, .L54+4
 2039 0954 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2040 0958 0310C2E7 		strb	r1, [r2, r3]
 2041              	.L47:
 377:../reversi8_2018.c **** 
 378:../reversi8_2018.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2042              		.loc 1 378 0
 2043 095c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2044 0960 000053E3 		cmp	r3, #0
 2045 0964 1500000A 		beq	.L48
 2046              		.loc 1 378 0 is_stmt 0 discriminator 1
 2047 0968 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2048 096c 013043E2 		sub	r3, r3, #1
 2049 0970 8331A0E1 		mov	r3, r3, asl #3
 2050 0974 10201BE5 		ldr	r2, [fp, #-16]
 2051 0978 032082E0 		add	r2, r2, r3
 2052 097c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2053 0980 013043E2 		sub	r3, r3, #1
 2054 0984 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2055 0988 7C329FE5 		ldr	r3, .L54
 2056 098c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2057 0990 030052E1 		cmp	r2, r3
 2058 0994 0900000A 		beq	.L48
 379:../reversi8_2018.c ****             candidatas[f-1][c-1] = SI;
 2059              		.loc 1 379 0 is_stmt 1
 2060 0998 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2061 099c 013043E2 		sub	r3, r3, #1
 2062 09a0 8331A0E1 		mov	r3, r3, asl #3
 2063 09a4 10201BE5 		ldr	r2, [fp, #-16]
 2064 09a8 032082E0 		add	r2, r2, r3
 2065 09ac 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2066 09b0 013043E2 		sub	r3, r3, #1
 2067 09b4 54129FE5 		ldr	r1, .L54+4
 2068 09b8 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2069 09bc 0310C2E7 		strb	r1, [r2, r3]
 2070              	.L48:
 380:../reversi8_2018.c **** 
 381:../reversi8_2018.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2071              		.loc 1 381 0
 2072 09c0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2073 09c4 060053E3 		cmp	r3, #6
 2074 09c8 1500008A 		bhi	.L46
 2075              		.loc 1 381 0 is_stmt 0 discriminator 1
 2076 09cc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2077 09d0 013043E2 		sub	r3, r3, #1
 2078 09d4 8331A0E1 		mov	r3, r3, asl #3
 2079 09d8 10201BE5 		ldr	r2, [fp, #-16]
 2080 09dc 032082E0 		add	r2, r2, r3
 2081 09e0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2082 09e4 013083E2 		add	r3, r3, #1
 2083 09e8 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2084 09ec 18329FE5 		ldr	r3, .L54
 2085 09f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2086 09f4 030052E1 		cmp	r2, r3
 2087 09f8 0900000A 		beq	.L46
 382:../reversi8_2018.c ****             candidatas[f-1][c+1] = SI;
 2088              		.loc 1 382 0 is_stmt 1
 2089 09fc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2090 0a00 013043E2 		sub	r3, r3, #1
 2091 0a04 8331A0E1 		mov	r3, r3, asl #3
 2092 0a08 10201BE5 		ldr	r2, [fp, #-16]
 2093 0a0c 032082E0 		add	r2, r2, r3
 2094 0a10 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2095 0a14 013083E2 		add	r3, r3, #1
 2096 0a18 F0119FE5 		ldr	r1, .L54+4
 2097 0a1c 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2098 0a20 0310C2E7 		strb	r1, [r2, r3]
 2099              	.L46:
 383:../reversi8_2018.c ****     }
 384:../reversi8_2018.c ****     if (f < 7)
 2100              		.loc 1 384 0
 2101 0a24 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2102 0a28 060053E3 		cmp	r3, #6
 2103 0a2c 4500008A 		bhi	.L49
 385:../reversi8_2018.c ****     {
 386:../reversi8_2018.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2104              		.loc 1 386 0
 2105 0a30 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2106 0a34 013083E2 		add	r3, r3, #1
 2107 0a38 8331A0E1 		mov	r3, r3, asl #3
 2108 0a3c 10201BE5 		ldr	r2, [fp, #-16]
 2109 0a40 032082E0 		add	r2, r2, r3
 2110 0a44 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2111 0a48 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2112 0a4c B8319FE5 		ldr	r3, .L54
 2113 0a50 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2114 0a54 030052E1 		cmp	r2, r3
 2115 0a58 0800000A 		beq	.L50
 387:../reversi8_2018.c ****             candidatas[f+1][c] = SI;
 2116              		.loc 1 387 0
 2117 0a5c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2118 0a60 013083E2 		add	r3, r3, #1
 2119 0a64 8331A0E1 		mov	r3, r3, asl #3
 2120 0a68 10201BE5 		ldr	r2, [fp, #-16]
 2121 0a6c 032082E0 		add	r2, r2, r3
 2122 0a70 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2123 0a74 94119FE5 		ldr	r1, .L54+4
 2124 0a78 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2125 0a7c 0310C2E7 		strb	r1, [r2, r3]
 2126              	.L50:
 388:../reversi8_2018.c **** 
 389:../reversi8_2018.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2127              		.loc 1 389 0
 2128 0a80 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2129 0a84 000053E3 		cmp	r3, #0
 2130 0a88 1500000A 		beq	.L51
 2131              		.loc 1 389 0 is_stmt 0 discriminator 1
 2132 0a8c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2133 0a90 013083E2 		add	r3, r3, #1
 2134 0a94 8331A0E1 		mov	r3, r3, asl #3
 2135 0a98 10201BE5 		ldr	r2, [fp, #-16]
 2136 0a9c 032082E0 		add	r2, r2, r3
 2137 0aa0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2138 0aa4 013043E2 		sub	r3, r3, #1
 2139 0aa8 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2140 0aac 58319FE5 		ldr	r3, .L54
 2141 0ab0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2142 0ab4 030052E1 		cmp	r2, r3
 2143 0ab8 0900000A 		beq	.L51
 390:../reversi8_2018.c ****             candidatas[f+1][c-1] = SI;
 2144              		.loc 1 390 0 is_stmt 1
 2145 0abc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2146 0ac0 013083E2 		add	r3, r3, #1
 2147 0ac4 8331A0E1 		mov	r3, r3, asl #3
 2148 0ac8 10201BE5 		ldr	r2, [fp, #-16]
 2149 0acc 032082E0 		add	r2, r2, r3
 2150 0ad0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2151 0ad4 013043E2 		sub	r3, r3, #1
 2152 0ad8 30119FE5 		ldr	r1, .L54+4
 2153 0adc 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2154 0ae0 0310C2E7 		strb	r1, [r2, r3]
 2155              	.L51:
 391:../reversi8_2018.c **** 
 392:../reversi8_2018.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2156              		.loc 1 392 0
 2157 0ae4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2158 0ae8 060053E3 		cmp	r3, #6
 2159 0aec 1500008A 		bhi	.L49
 2160              		.loc 1 392 0 is_stmt 0 discriminator 1
 2161 0af0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2162 0af4 013083E2 		add	r3, r3, #1
 2163 0af8 8331A0E1 		mov	r3, r3, asl #3
 2164 0afc 10201BE5 		ldr	r2, [fp, #-16]
 2165 0b00 032082E0 		add	r2, r2, r3
 2166 0b04 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2167 0b08 013083E2 		add	r3, r3, #1
 2168 0b0c 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2169 0b10 F4309FE5 		ldr	r3, .L54
 2170 0b14 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2171 0b18 030052E1 		cmp	r2, r3
 2172 0b1c 0900000A 		beq	.L49
 393:../reversi8_2018.c ****             candidatas[f+1][c+1] = SI;
 2173              		.loc 1 393 0 is_stmt 1
 2174 0b20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2175 0b24 013083E2 		add	r3, r3, #1
 2176 0b28 8331A0E1 		mov	r3, r3, asl #3
 2177 0b2c 10201BE5 		ldr	r2, [fp, #-16]
 2178 0b30 032082E0 		add	r2, r2, r3
 2179 0b34 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2180 0b38 013083E2 		add	r3, r3, #1
 2181 0b3c CC109FE5 		ldr	r1, .L54+4
 2182 0b40 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2183 0b44 0310C2E7 		strb	r1, [r2, r3]
 2184              	.L49:
 394:../reversi8_2018.c ****     }
 395:../reversi8_2018.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2185              		.loc 1 395 0
 2186 0b48 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2187 0b4c 000053E3 		cmp	r3, #0
 2188 0b50 1300000A 		beq	.L52
 2189              		.loc 1 395 0 is_stmt 0 discriminator 1
 2190 0b54 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2191 0b58 8331A0E1 		mov	r3, r3, asl #3
 2192 0b5c 10201BE5 		ldr	r2, [fp, #-16]
 2193 0b60 032082E0 		add	r2, r2, r3
 2194 0b64 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2195 0b68 013043E2 		sub	r3, r3, #1
 2196 0b6c 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2197 0b70 94309FE5 		ldr	r3, .L54
 2198 0b74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2199 0b78 030052E1 		cmp	r2, r3
 2200 0b7c 0800000A 		beq	.L52
 396:../reversi8_2018.c ****         candidatas[f][c-1] = SI;
 2201              		.loc 1 396 0 is_stmt 1
 2202 0b80 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2203 0b84 8331A0E1 		mov	r3, r3, asl #3
 2204 0b88 10201BE5 		ldr	r2, [fp, #-16]
 2205 0b8c 032082E0 		add	r2, r2, r3
 2206 0b90 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2207 0b94 013043E2 		sub	r3, r3, #1
 2208 0b98 70109FE5 		ldr	r1, .L54+4
 2209 0b9c 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2210 0ba0 0310C2E7 		strb	r1, [r2, r3]
 2211              	.L52:
 397:../reversi8_2018.c **** 
 398:../reversi8_2018.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2212              		.loc 1 398 0
 2213 0ba4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2214 0ba8 060053E3 		cmp	r3, #6
 2215 0bac 1300008A 		bhi	.L45
 2216              		.loc 1 398 0 is_stmt 0 discriminator 1
 2217 0bb0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2218 0bb4 8331A0E1 		mov	r3, r3, asl #3
 2219 0bb8 10201BE5 		ldr	r2, [fp, #-16]
 2220 0bbc 032082E0 		add	r2, r2, r3
 2221 0bc0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2222 0bc4 013083E2 		add	r3, r3, #1
 2223 0bc8 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2224 0bcc 38309FE5 		ldr	r3, .L54
 2225 0bd0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2226 0bd4 030052E1 		cmp	r2, r3
 2227 0bd8 0800000A 		beq	.L45
 399:../reversi8_2018.c ****         candidatas[f][c+1] = SI;
 2228              		.loc 1 399 0 is_stmt 1
 2229 0bdc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2230 0be0 8331A0E1 		mov	r3, r3, asl #3
 2231 0be4 10201BE5 		ldr	r2, [fp, #-16]
 2232 0be8 032082E0 		add	r2, r2, r3
 2233 0bec 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2234 0bf0 013083E2 		add	r3, r3, #1
 2235 0bf4 14109FE5 		ldr	r1, .L54+4
 2236 0bf8 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2237 0bfc 0310C2E7 		strb	r1, [r2, r3]
 2238              	.L45:
 400:../reversi8_2018.c **** }
 2239              		.loc 1 400 0
 2240 0c00 0CD04BE2 		sub	sp, fp, #12
 2241 0c04 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2242 0c08 1EFF2FE1 		bx	lr
 2243              	.L55:
 2244              		.align	2
 2245              	.L54:
 2246 0c0c 00000000 		.word	CASILLA_OCUPADA
 2247 0c10 00000000 		.word	SI
 2248              		.cfi_endproc
 2249              	.LFE8:
 2251              		.align	2
 2252              		.global	reversi8
 2254              	reversi8:
 2255              	.LFB9:
 401:../reversi8_2018.c **** 
 402:../reversi8_2018.c **** 
 403:../reversi8_2018.c **** 
 404:../reversi8_2018.c **** 
 405:../reversi8_2018.c **** ////////////////////////////////////////////////////////////////////////////////
 406:../reversi8_2018.c **** // Proceso principal del juego
 407:../reversi8_2018.c **** // Utiliza el tablero,
 408:../reversi8_2018.c **** // y las direcciones en las que indica el jugador la fila y la columna
 409:../reversi8_2018.c **** // y la señal de ready que indica que se han actualizado fila y columna
 410:../reversi8_2018.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 411:../reversi8_2018.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 412:../reversi8_2018.c **** // en esta versión el humano lleva negras y la máquina blancas
 413:../reversi8_2018.c **** // no se comprueba que el humano mueva correctamente.
 414:../reversi8_2018.c **** // Sólo que la máquina realice un movimiento correcto.
 415:../reversi8_2018.c **** void reversi8()
 416:../reversi8_2018.c **** {
 2256              		.loc 1 416 0
 2257              		.cfi_startproc
 2258              		@ Function supports interworking.
 2259              		@ args = 0, pretend = 0, frame = 304
 2260              		@ frame_needed = 1, uses_anonymous_args = 0
 2261 0c14 0DC0A0E1 		mov	ip, sp
 2262              	.LCFI18:
 2263              		.cfi_def_cfa_register 12
 2264 0c18 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 2265 0c1c 04B04CE2 		sub	fp, ip, #4
 2266              		.cfi_offset 14, -8
 2267              		.cfi_offset 13, -12
 2268              		.cfi_offset 11, -16
 2269              		.cfi_offset 10, -20
 2270              		.cfi_offset 9, -24
 2271              		.cfi_offset 8, -28
 2272              		.cfi_offset 7, -32
 2273              		.cfi_offset 6, -36
 2274              		.cfi_offset 5, -40
 2275              		.cfi_offset 4, -44
 2276              	.LCFI19:
 2277              		.cfi_def_cfa 11, 4
 2278 0c20 4DDF4DE2 		sub	sp, sp, #308
 417:../reversi8_2018.c **** 
 418:../reversi8_2018.c **** 	 ////////////////////////////////////////////////////////////////////
 419:../reversi8_2018.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 420:../reversi8_2018.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 421:../reversi8_2018.c **** 	 ////////////////////////////////////////////////////////////////////
 422:../reversi8_2018.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 2279              		.loc 1 422 0
 2280 0c24 38379FE5 		ldr	r3, .L61
 2281 0c28 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2282 0c2c 30379FE5 		ldr	r3, .L61
 2283 0c30 00C0D3E5 		ldrb	ip, [r3, #0]	@ zero_extendqisi2
 2284 0c34 28379FE5 		ldr	r3, .L61
 2285 0c38 0040D3E5 		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 2286 0c3c 20379FE5 		ldr	r3, .L61
 2287 0c40 0060D3E5 		ldrb	r6, [r3, #0]	@ zero_extendqisi2
 2288 0c44 18379FE5 		ldr	r3, .L61
 2289 0c48 0080D3E5 		ldrb	r8, [r3, #0]	@ zero_extendqisi2
 2290 0c4c 10379FE5 		ldr	r3, .L61
 2291 0c50 0090D3E5 		ldrb	r9, [r3, #0]	@ zero_extendqisi2
 2292 0c54 08379FE5 		ldr	r3, .L61
 2293 0c58 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2294 0c5c 90300BE5 		str	r3, [fp, #-144]
 2295 0c60 FC369FE5 		ldr	r3, .L61
 2296 0c64 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2297 0c68 94300BE5 		str	r3, [fp, #-148]
 2298 0c6c F0369FE5 		ldr	r3, .L61
 2299 0c70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2300 0c74 98300BE5 		str	r3, [fp, #-152]
 2301 0c78 E4369FE5 		ldr	r3, .L61
 2302 0c7c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2303 0c80 9C300BE5 		str	r3, [fp, #-156]
 2304 0c84 D8369FE5 		ldr	r3, .L61
 2305 0c88 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2306 0c8c A0300BE5 		str	r3, [fp, #-160]
 2307 0c90 CC369FE5 		ldr	r3, .L61
 2308 0c94 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2309 0c98 A4300BE5 		str	r3, [fp, #-164]
 2310 0c9c C0369FE5 		ldr	r3, .L61
 2311 0ca0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2312 0ca4 A8300BE5 		str	r3, [fp, #-168]
 2313 0ca8 B4369FE5 		ldr	r3, .L61
 2314 0cac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2315 0cb0 AC300BE5 		str	r3, [fp, #-172]
 2316 0cb4 A8369FE5 		ldr	r3, .L61
 2317 0cb8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2318 0cbc B0300BE5 		str	r3, [fp, #-176]
 2319 0cc0 9C369FE5 		ldr	r3, .L61
 2320 0cc4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2321 0cc8 B4300BE5 		str	r3, [fp, #-180]
 2322 0ccc 90369FE5 		ldr	r3, .L61
 2323 0cd0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2324 0cd4 B8300BE5 		str	r3, [fp, #-184]
 2325 0cd8 84369FE5 		ldr	r3, .L61
 2326 0cdc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2327 0ce0 BC300BE5 		str	r3, [fp, #-188]
 2328 0ce4 78369FE5 		ldr	r3, .L61
 2329 0ce8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2330 0cec C0300BE5 		str	r3, [fp, #-192]
 2331 0cf0 6C369FE5 		ldr	r3, .L61
 2332 0cf4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2333 0cf8 C4300BE5 		str	r3, [fp, #-196]
 2334 0cfc 60369FE5 		ldr	r3, .L61
 2335 0d00 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2336 0d04 C8300BE5 		str	r3, [fp, #-200]
 2337 0d08 54369FE5 		ldr	r3, .L61
 2338 0d0c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2339 0d10 CC300BE5 		str	r3, [fp, #-204]
 2340 0d14 48369FE5 		ldr	r3, .L61
 2341 0d18 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2342 0d1c D0300BE5 		str	r3, [fp, #-208]
 2343 0d20 3C369FE5 		ldr	r3, .L61
 2344 0d24 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2345 0d28 D4300BE5 		str	r3, [fp, #-212]
 2346 0d2c 30369FE5 		ldr	r3, .L61
 2347 0d30 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2348 0d34 D8300BE5 		str	r3, [fp, #-216]
 2349 0d38 24369FE5 		ldr	r3, .L61
 2350 0d3c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2351 0d40 DC300BE5 		str	r3, [fp, #-220]
 2352 0d44 18369FE5 		ldr	r3, .L61
 2353 0d48 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2354 0d4c E0300BE5 		str	r3, [fp, #-224]
 2355 0d50 0C369FE5 		ldr	r3, .L61
 2356 0d54 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2357 0d58 E4300BE5 		str	r3, [fp, #-228]
 2358 0d5c 00369FE5 		ldr	r3, .L61
 2359 0d60 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2360 0d64 E8300BE5 		str	r3, [fp, #-232]
 2361 0d68 F4359FE5 		ldr	r3, .L61
 2362 0d6c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2363 0d70 EC300BE5 		str	r3, [fp, #-236]
 2364 0d74 E8359FE5 		ldr	r3, .L61
 2365 0d78 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2366 0d7c F0300BE5 		str	r3, [fp, #-240]
 2367 0d80 DC359FE5 		ldr	r3, .L61
 2368 0d84 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2369 0d88 F4300BE5 		str	r3, [fp, #-244]
 2370 0d8c D0359FE5 		ldr	r3, .L61
 2371 0d90 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2372 0d94 F8300BE5 		str	r3, [fp, #-248]
 2373 0d98 C4359FE5 		ldr	r3, .L61
 2374 0d9c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2375 0da0 FC300BE5 		str	r3, [fp, #-252]
 2376 0da4 B8359FE5 		ldr	r3, .L61
 2377 0da8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2378 0dac 00310BE5 		str	r3, [fp, #-256]
 2379 0db0 AC359FE5 		ldr	r3, .L61
 2380 0db4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2381 0db8 04310BE5 		str	r3, [fp, #-260]
 2382 0dbc A0359FE5 		ldr	r3, .L61
 2383 0dc0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2384 0dc4 08310BE5 		str	r3, [fp, #-264]
 2385 0dc8 94359FE5 		ldr	r3, .L61
 2386 0dcc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2387 0dd0 0C310BE5 		str	r3, [fp, #-268]
 2388 0dd4 88359FE5 		ldr	r3, .L61
 2389 0dd8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2390 0ddc 10310BE5 		str	r3, [fp, #-272]
 2391 0de0 7C359FE5 		ldr	r3, .L61
 2392 0de4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2393 0de8 14310BE5 		str	r3, [fp, #-276]
 2394 0dec 70359FE5 		ldr	r3, .L61
 2395 0df0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2396 0df4 18310BE5 		str	r3, [fp, #-280]
 2397 0df8 64359FE5 		ldr	r3, .L61
 2398 0dfc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2399 0e00 1C310BE5 		str	r3, [fp, #-284]
 2400 0e04 58359FE5 		ldr	r3, .L61
 2401 0e08 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2402 0e0c 20310BE5 		str	r3, [fp, #-288]
 2403 0e10 4C359FE5 		ldr	r3, .L61
 2404 0e14 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2405 0e18 24310BE5 		str	r3, [fp, #-292]
 2406 0e1c 40359FE5 		ldr	r3, .L61
 2407 0e20 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2408 0e24 28310BE5 		str	r3, [fp, #-296]
 2409 0e28 34359FE5 		ldr	r3, .L61
 2410 0e2c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2411 0e30 2C310BE5 		str	r3, [fp, #-300]
 2412 0e34 28359FE5 		ldr	r3, .L61
 2413 0e38 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2414 0e3c 30310BE5 		str	r3, [fp, #-304]
 2415 0e40 1C359FE5 		ldr	r3, .L61
 2416 0e44 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2417 0e48 34310BE5 		str	r3, [fp, #-308]
 2418 0e4c 10359FE5 		ldr	r3, .L61
 2419 0e50 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2420 0e54 38310BE5 		str	r3, [fp, #-312]
 2421 0e58 04359FE5 		ldr	r3, .L61
 2422 0e5c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2423 0e60 3C310BE5 		str	r3, [fp, #-316]
 2424 0e64 F8349FE5 		ldr	r3, .L61
 2425 0e68 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2426 0e6c 40310BE5 		str	r3, [fp, #-320]
 2427 0e70 EC349FE5 		ldr	r3, .L61
 2428 0e74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2429 0e78 44310BE5 		str	r3, [fp, #-324]
 2430 0e7c E0349FE5 		ldr	r3, .L61
 2431 0e80 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2432 0e84 48310BE5 		str	r3, [fp, #-328]
 2433 0e88 D4349FE5 		ldr	r3, .L61
 2434 0e8c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2435 0e90 4C310BE5 		str	r3, [fp, #-332]
 2436 0e94 C8349FE5 		ldr	r3, .L61
 2437 0e98 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2438 0e9c 50310BE5 		str	r3, [fp, #-336]
 2439 0ea0 BC349FE5 		ldr	r3, .L61
 2440 0ea4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2441 0ea8 54310BE5 		str	r3, [fp, #-340]
 2442 0eac B0349FE5 		ldr	r3, .L61
 2443 0eb0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2444 0eb4 58310BE5 		str	r3, [fp, #-344]
 2445 0eb8 A4349FE5 		ldr	r3, .L61
 2446 0ebc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2447 0ec0 5C310BE5 		str	r3, [fp, #-348]
 2448 0ec4 98349FE5 		ldr	r3, .L61
 2449 0ec8 00A0D3E5 		ldrb	sl, [r3, #0]	@ zero_extendqisi2
 2450 0ecc 90349FE5 		ldr	r3, .L61
 2451 0ed0 0070D3E5 		ldrb	r7, [r3, #0]	@ zero_extendqisi2
 2452 0ed4 88349FE5 		ldr	r3, .L61
 2453 0ed8 0050D3E5 		ldrb	r5, [r3, #0]	@ zero_extendqisi2
 2454 0edc 80349FE5 		ldr	r3, .L61
 2455 0ee0 00E0D3E5 		ldrb	lr, [r3, #0]	@ zero_extendqisi2
 2456 0ee4 78349FE5 		ldr	r3, .L61
 2457 0ee8 0000D3E5 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2458 0eec 70349FE5 		ldr	r3, .L61
 2459 0ef0 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2460 0ef4 0130A0E1 		mov	r3, r1
 2461 0ef8 7C304BE5 		strb	r3, [fp, #-124]
 2462 0efc 0C30A0E1 		mov	r3, ip
 2463 0f00 7B304BE5 		strb	r3, [fp, #-123]
 2464 0f04 0430A0E1 		mov	r3, r4
 2465 0f08 7A304BE5 		strb	r3, [fp, #-122]
 2466 0f0c 0630A0E1 		mov	r3, r6
 2467 0f10 79304BE5 		strb	r3, [fp, #-121]
 2468 0f14 0830A0E1 		mov	r3, r8
 2469 0f18 78304BE5 		strb	r3, [fp, #-120]
 2470 0f1c 0930A0E1 		mov	r3, r9
 2471 0f20 77304BE5 		strb	r3, [fp, #-119]
 2472 0f24 90101BE5 		ldr	r1, [fp, #-144]
 2473 0f28 0130A0E1 		mov	r3, r1
 2474 0f2c 76304BE5 		strb	r3, [fp, #-118]
 2475 0f30 94101BE5 		ldr	r1, [fp, #-148]
 2476 0f34 0130A0E1 		mov	r3, r1
 2477 0f38 75304BE5 		strb	r3, [fp, #-117]
 2478 0f3c 98101BE5 		ldr	r1, [fp, #-152]
 2479 0f40 0130A0E1 		mov	r3, r1
 2480 0f44 74304BE5 		strb	r3, [fp, #-116]
 2481 0f48 9C101BE5 		ldr	r1, [fp, #-156]
 2482 0f4c 0130A0E1 		mov	r3, r1
 2483 0f50 73304BE5 		strb	r3, [fp, #-115]
 2484 0f54 A0101BE5 		ldr	r1, [fp, #-160]
 2485 0f58 0130A0E1 		mov	r3, r1
 2486 0f5c 72304BE5 		strb	r3, [fp, #-114]
 2487 0f60 A4101BE5 		ldr	r1, [fp, #-164]
 2488 0f64 0130A0E1 		mov	r3, r1
 2489 0f68 71304BE5 		strb	r3, [fp, #-113]
 2490 0f6c A8101BE5 		ldr	r1, [fp, #-168]
 2491 0f70 0130A0E1 		mov	r3, r1
 2492 0f74 70304BE5 		strb	r3, [fp, #-112]
 2493 0f78 AC101BE5 		ldr	r1, [fp, #-172]
 2494 0f7c 0130A0E1 		mov	r3, r1
 2495 0f80 6F304BE5 		strb	r3, [fp, #-111]
 2496 0f84 B0101BE5 		ldr	r1, [fp, #-176]
 2497 0f88 0130A0E1 		mov	r3, r1
 2498 0f8c 6E304BE5 		strb	r3, [fp, #-110]
 2499 0f90 B4101BE5 		ldr	r1, [fp, #-180]
 2500 0f94 0130A0E1 		mov	r3, r1
 2501 0f98 6D304BE5 		strb	r3, [fp, #-109]
 2502 0f9c B8101BE5 		ldr	r1, [fp, #-184]
 2503 0fa0 0130A0E1 		mov	r3, r1
 2504 0fa4 6C304BE5 		strb	r3, [fp, #-108]
 2505 0fa8 BC101BE5 		ldr	r1, [fp, #-188]
 2506 0fac 0130A0E1 		mov	r3, r1
 2507 0fb0 6B304BE5 		strb	r3, [fp, #-107]
 2508 0fb4 C0101BE5 		ldr	r1, [fp, #-192]
 2509 0fb8 0130A0E1 		mov	r3, r1
 2510 0fbc 6A304BE5 		strb	r3, [fp, #-106]
 2511 0fc0 C4101BE5 		ldr	r1, [fp, #-196]
 2512 0fc4 0130A0E1 		mov	r3, r1
 2513 0fc8 69304BE5 		strb	r3, [fp, #-105]
 2514 0fcc C8101BE5 		ldr	r1, [fp, #-200]
 2515 0fd0 0130A0E1 		mov	r3, r1
 2516 0fd4 68304BE5 		strb	r3, [fp, #-104]
 2517 0fd8 CC101BE5 		ldr	r1, [fp, #-204]
 2518 0fdc 0130A0E1 		mov	r3, r1
 2519 0fe0 67304BE5 		strb	r3, [fp, #-103]
 2520 0fe4 D0101BE5 		ldr	r1, [fp, #-208]
 2521 0fe8 0130A0E1 		mov	r3, r1
 2522 0fec 66304BE5 		strb	r3, [fp, #-102]
 2523 0ff0 D4101BE5 		ldr	r1, [fp, #-212]
 2524 0ff4 0130A0E1 		mov	r3, r1
 2525 0ff8 65304BE5 		strb	r3, [fp, #-101]
 2526 0ffc D8101BE5 		ldr	r1, [fp, #-216]
 2527 1000 0130A0E1 		mov	r3, r1
 2528 1004 64304BE5 		strb	r3, [fp, #-100]
 2529 1008 DC101BE5 		ldr	r1, [fp, #-220]
 2530 100c 0130A0E1 		mov	r3, r1
 2531 1010 63304BE5 		strb	r3, [fp, #-99]
 2532 1014 E0101BE5 		ldr	r1, [fp, #-224]
 2533 1018 0130A0E1 		mov	r3, r1
 2534 101c 62304BE5 		strb	r3, [fp, #-98]
 2535 1020 E4101BE5 		ldr	r1, [fp, #-228]
 2536 1024 0130A0E1 		mov	r3, r1
 2537 1028 61304BE5 		strb	r3, [fp, #-97]
 2538 102c E8101BE5 		ldr	r1, [fp, #-232]
 2539 1030 0130A0E1 		mov	r3, r1
 2540 1034 60304BE5 		strb	r3, [fp, #-96]
 2541 1038 EC101BE5 		ldr	r1, [fp, #-236]
 2542 103c 0130A0E1 		mov	r3, r1
 2543 1040 5F304BE5 		strb	r3, [fp, #-95]
 2544 1044 F0101BE5 		ldr	r1, [fp, #-240]
 2545 1048 0130A0E1 		mov	r3, r1
 2546 104c 5E304BE5 		strb	r3, [fp, #-94]
 2547 1050 F4101BE5 		ldr	r1, [fp, #-244]
 2548 1054 0130A0E1 		mov	r3, r1
 2549 1058 5D304BE5 		strb	r3, [fp, #-93]
 2550 105c F8101BE5 		ldr	r1, [fp, #-248]
 2551 1060 0130A0E1 		mov	r3, r1
 2552 1064 5C304BE5 		strb	r3, [fp, #-92]
 2553 1068 FC101BE5 		ldr	r1, [fp, #-252]
 2554 106c 0130A0E1 		mov	r3, r1
 2555 1070 5B304BE5 		strb	r3, [fp, #-91]
 2556 1074 00111BE5 		ldr	r1, [fp, #-256]
 2557 1078 0130A0E1 		mov	r3, r1
 2558 107c 5A304BE5 		strb	r3, [fp, #-90]
 2559 1080 04111BE5 		ldr	r1, [fp, #-260]
 2560 1084 0130A0E1 		mov	r3, r1
 2561 1088 59304BE5 		strb	r3, [fp, #-89]
 2562 108c 08111BE5 		ldr	r1, [fp, #-264]
 2563 1090 0130A0E1 		mov	r3, r1
 2564 1094 58304BE5 		strb	r3, [fp, #-88]
 2565 1098 0C111BE5 		ldr	r1, [fp, #-268]
 2566 109c 0130A0E1 		mov	r3, r1
 2567 10a0 57304BE5 		strb	r3, [fp, #-87]
 2568 10a4 10111BE5 		ldr	r1, [fp, #-272]
 2569 10a8 0130A0E1 		mov	r3, r1
 2570 10ac 56304BE5 		strb	r3, [fp, #-86]
 2571 10b0 14111BE5 		ldr	r1, [fp, #-276]
 2572 10b4 0130A0E1 		mov	r3, r1
 2573 10b8 55304BE5 		strb	r3, [fp, #-85]
 2574 10bc 18111BE5 		ldr	r1, [fp, #-280]
 2575 10c0 0130A0E1 		mov	r3, r1
 2576 10c4 54304BE5 		strb	r3, [fp, #-84]
 2577 10c8 1C111BE5 		ldr	r1, [fp, #-284]
 2578 10cc 0130A0E1 		mov	r3, r1
 2579 10d0 53304BE5 		strb	r3, [fp, #-83]
 2580 10d4 20111BE5 		ldr	r1, [fp, #-288]
 2581 10d8 0130A0E1 		mov	r3, r1
 2582 10dc 52304BE5 		strb	r3, [fp, #-82]
 2583 10e0 24111BE5 		ldr	r1, [fp, #-292]
 2584 10e4 0130A0E1 		mov	r3, r1
 2585 10e8 51304BE5 		strb	r3, [fp, #-81]
 2586 10ec 28111BE5 		ldr	r1, [fp, #-296]
 2587 10f0 0130A0E1 		mov	r3, r1
 2588 10f4 50304BE5 		strb	r3, [fp, #-80]
 2589 10f8 2C111BE5 		ldr	r1, [fp, #-300]
 2590 10fc 0130A0E1 		mov	r3, r1
 2591 1100 4F304BE5 		strb	r3, [fp, #-79]
 2592 1104 30111BE5 		ldr	r1, [fp, #-304]
 2593 1108 0130A0E1 		mov	r3, r1
 2594 110c 4E304BE5 		strb	r3, [fp, #-78]
 2595 1110 34111BE5 		ldr	r1, [fp, #-308]
 2596 1114 0130A0E1 		mov	r3, r1
 2597 1118 4D304BE5 		strb	r3, [fp, #-77]
 2598 111c 38111BE5 		ldr	r1, [fp, #-312]
 2599 1120 0130A0E1 		mov	r3, r1
 2600 1124 4C304BE5 		strb	r3, [fp, #-76]
 2601 1128 3C111BE5 		ldr	r1, [fp, #-316]
 2602 112c 0130A0E1 		mov	r3, r1
 2603 1130 4B304BE5 		strb	r3, [fp, #-75]
 2604 1134 40111BE5 		ldr	r1, [fp, #-320]
 2605 1138 0130A0E1 		mov	r3, r1
 2606 113c 4A304BE5 		strb	r3, [fp, #-74]
 2607 1140 44111BE5 		ldr	r1, [fp, #-324]
 2608 1144 0130A0E1 		mov	r3, r1
 2609 1148 49304BE5 		strb	r3, [fp, #-73]
 2610 114c 48111BE5 		ldr	r1, [fp, #-328]
 2611 1150 0130A0E1 		mov	r3, r1
 2612 1154 48304BE5 		strb	r3, [fp, #-72]
 2613 1158 4C111BE5 		ldr	r1, [fp, #-332]
 2614 115c 0130A0E1 		mov	r3, r1
 2615 1160 47304BE5 		strb	r3, [fp, #-71]
 2616 1164 50111BE5 		ldr	r1, [fp, #-336]
 2617 1168 0130A0E1 		mov	r3, r1
 2618 116c 46304BE5 		strb	r3, [fp, #-70]
 2619 1170 54111BE5 		ldr	r1, [fp, #-340]
 2620 1174 0130A0E1 		mov	r3, r1
 2621 1178 45304BE5 		strb	r3, [fp, #-69]
 2622 117c 58111BE5 		ldr	r1, [fp, #-344]
 2623 1180 0130A0E1 		mov	r3, r1
 2624 1184 44304BE5 		strb	r3, [fp, #-68]
 2625 1188 5C111BE5 		ldr	r1, [fp, #-348]
 2626 118c 0130A0E1 		mov	r3, r1
 2627 1190 43304BE5 		strb	r3, [fp, #-67]
 2628 1194 0A30A0E1 		mov	r3, sl
 2629 1198 42304BE5 		strb	r3, [fp, #-66]
 2630 119c 0730A0E1 		mov	r3, r7
 2631 11a0 41304BE5 		strb	r3, [fp, #-65]
 2632 11a4 0530A0E1 		mov	r3, r5
 2633 11a8 40304BE5 		strb	r3, [fp, #-64]
 2634 11ac 0E30A0E1 		mov	r3, lr
 2635 11b0 3F304BE5 		strb	r3, [fp, #-63]
 2636 11b4 0030A0E1 		mov	r3, r0
 2637 11b8 3E304BE5 		strb	r3, [fp, #-62]
 2638 11bc 0230A0E1 		mov	r3, r2
 2639 11c0 3D304BE5 		strb	r3, [fp, #-61]
 423:../reversi8_2018.c ****     {
 424:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 425:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 426:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 427:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 428:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 429:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 430:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 431:../reversi8_2018.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
 432:../reversi8_2018.c ****     };
 433:../reversi8_2018.c **** 
 434:../reversi8_2018.c **** 
 435:../reversi8_2018.c ****     int done;     // la máquina ha conseguido mover o no
 436:../reversi8_2018.c ****     int move = 0; // el humano ha conseguido mover o no
 2640              		.loc 1 436 0
 2641 11c4 0030A0E3 		mov	r3, #0
 2642 11c8 30300BE5 		str	r3, [fp, #-48]
 437:../reversi8_2018.c ****     int blancas, negras; // número de fichas de cada color
 438:../reversi8_2018.c ****     int fin = 0;  // fin vale 1 si el humano no ha podido mover
 2643              		.loc 1 438 0
 2644 11cc 0030A0E3 		mov	r3, #0
 2645 11d0 34300BE5 		str	r3, [fp, #-52]
 439:../reversi8_2018.c ****                   // (ha introducido un valor de movimiento con algún 8)
 440:../reversi8_2018.c ****                   // y luego la máquina tampoco puede
 441:../reversi8_2018.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 442:../reversi8_2018.c **** 
 443:../reversi8_2018.c ****     init_table(tablero, candidatas);
 2646              		.loc 1 443 0
 2647 11d4 7C304BE2 		sub	r3, fp, #124
 2648 11d8 88019FE5 		ldr	r0, .L61+4
 2649 11dc 0310A0E1 		mov	r1, r3
 2650 11e0 FEFFFFEB 		bl	init_table
 444:../reversi8_2018.c ****     while (fin == 0)
 2651              		.loc 1 444 0
 2652 11e4 520000EA 		b	.L57
 2653              	.L60:
 445:../reversi8_2018.c ****     {
 446:../reversi8_2018.c ****         move = 0;
 2654              		.loc 1 446 0
 2655 11e8 0030A0E3 		mov	r3, #0
 2656 11ec 30300BE5 		str	r3, [fp, #-48]
 447:../reversi8_2018.c ****         leds_on();
 2657              		.loc 1 447 0
 2658 11f0 FEFFFFEB 		bl	leds_on
 448:../reversi8_2018.c ****         esperar_mov(&ready);
 2659              		.loc 1 448 0
 2660 11f4 70019FE5 		ldr	r0, .L61+8
 2661 11f8 FEFFFFEB 		bl	esperar_mov
 449:../reversi8_2018.c ****         // si la fila o columna son 8 asumimos que el jugador no puede mover
 450:../reversi8_2018.c ****         if (((fila) != DIM) && ((columna) != DIM))
 2662              		.loc 1 450 0
 2663 11fc 6C319FE5 		ldr	r3, .L61+12
 2664 1200 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2665 1204 080053E3 		cmp	r3, #8
 2666 1208 2200000A 		beq	.L58
 2667              		.loc 1 450 0 is_stmt 0 discriminator 1
 2668 120c 60319FE5 		ldr	r3, .L61+16
 2669 1210 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2670 1214 080053E3 		cmp	r3, #8
 2671 1218 1E00000A 		beq	.L58
 451:../reversi8_2018.c ****         {
 452:../reversi8_2018.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2672              		.loc 1 452 0 is_stmt 1
 2673 121c 4C319FE5 		ldr	r3, .L61+12
 2674 1220 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2675 1224 0310A0E1 		mov	r1, r3
 2676 1228 44319FE5 		ldr	r3, .L61+16
 2677 122c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2678 1230 30219FE5 		ldr	r2, .L61+4
 2679 1234 8111A0E1 		mov	r1, r1, asl #3
 2680 1238 033081E0 		add	r3, r1, r3
 2681 123c 033082E0 		add	r3, r2, r3
 2682 1240 0220A0E3 		mov	r2, #2
 2683 1244 0020C3E5 		strb	r2, [r3, #0]
 453:../reversi8_2018.c ****             actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2684              		.loc 1 453 0
 2685 1248 20319FE5 		ldr	r3, .L61+12
 2686 124c 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2687 1250 1C319FE5 		ldr	r3, .L61+16
 2688 1254 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2689 1258 08019FE5 		ldr	r0, .L61+4
 2690 125c 0210A0E1 		mov	r1, r2
 2691 1260 0320A0E1 		mov	r2, r3
 2692 1264 0230A0E3 		mov	r3, #2
 2693 1268 FEFFFFEB 		bl	actualizar_tablero
 454:../reversi8_2018.c ****             actualizar_candidatas(candidatas, fila, columna);
 2694              		.loc 1 454 0
 2695 126c FC309FE5 		ldr	r3, .L61+12
 2696 1270 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2697 1274 F8309FE5 		ldr	r3, .L61+16
 2698 1278 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2699 127c 7C104BE2 		sub	r1, fp, #124
 2700 1280 0100A0E1 		mov	r0, r1
 2701 1284 0210A0E1 		mov	r1, r2
 2702 1288 0320A0E1 		mov	r2, r3
 2703 128c FEFFFFEB 		bl	actualizar_candidatas
 455:../reversi8_2018.c ****             move = 1;
 2704              		.loc 1 455 0
 2705 1290 0130A0E3 		mov	r3, #1
 2706 1294 30300BE5 		str	r3, [fp, #-48]
 2707              	.L58:
 456:../reversi8_2018.c ****         }
 457:../reversi8_2018.c **** 
 458:../reversi8_2018.c ****         // escribe el movimiento en las variables globales fila columna
 459:../reversi8_2018.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2708              		.loc 1 459 0
 2709 1298 7C104BE2 		sub	r1, fp, #124
 2710 129c 85204BE2 		sub	r2, fp, #133
 2711 12a0 86304BE2 		sub	r3, fp, #134
 2712 12a4 0100A0E1 		mov	r0, r1
 2713 12a8 B8109FE5 		ldr	r1, .L61+4
 2714 12ac FEFFFFEB 		bl	elegir_mov
 2715 12b0 38000BE5 		str	r0, [fp, #-56]
 460:../reversi8_2018.c ****         if (done == -1)
 2716              		.loc 1 460 0
 2717 12b4 38301BE5 		ldr	r3, [fp, #-56]
 2718 12b8 010073E3 		cmn	r3, #1
 2719 12bc 0500001A 		bne	.L59
 461:../reversi8_2018.c ****         {
 462:../reversi8_2018.c ****             if (move == 0)
 2720              		.loc 1 462 0
 2721 12c0 30301BE5 		ldr	r3, [fp, #-48]
 2722 12c4 000053E3 		cmp	r3, #0
 2723 12c8 1900001A 		bne	.L57
 463:../reversi8_2018.c ****                 fin = 1;
 2724              		.loc 1 463 0
 2725 12cc 0130A0E3 		mov	r3, #1
 2726 12d0 34300BE5 		str	r3, [fp, #-52]
 2727 12d4 160000EA 		b	.L57
 2728              	.L59:
 464:../reversi8_2018.c ****         }
 465:../reversi8_2018.c ****         else
 466:../reversi8_2018.c ****         {
 467:../reversi8_2018.c ****             tablero[f][c] = FICHA_BLANCA;
 2729              		.loc 1 467 0
 2730 12d8 85305BE5 		ldrb	r3, [fp, #-133]	@ zero_extendqisi2
 2731 12dc 0310A0E1 		mov	r1, r3
 2732 12e0 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2733 12e4 7C209FE5 		ldr	r2, .L61+4
 2734 12e8 8111A0E1 		mov	r1, r1, asl #3
 2735 12ec 033081E0 		add	r3, r1, r3
 2736 12f0 033082E0 		add	r3, r2, r3
 2737 12f4 0120A0E3 		mov	r2, #1
 2738 12f8 0020C3E5 		strb	r2, [r3, #0]
 468:../reversi8_2018.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2739              		.loc 1 468 0
 2740 12fc 85205BE5 		ldrb	r2, [fp, #-133]	@ zero_extendqisi2
 2741 1300 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2742 1304 5C009FE5 		ldr	r0, .L61+4
 2743 1308 0210A0E1 		mov	r1, r2
 2744 130c 0320A0E1 		mov	r2, r3
 2745 1310 0130A0E3 		mov	r3, #1
 2746 1314 FEFFFFEB 		bl	actualizar_tablero
 469:../reversi8_2018.c ****             actualizar_candidatas(candidatas, f, c);
 2747              		.loc 1 469 0
 2748 1318 85205BE5 		ldrb	r2, [fp, #-133]	@ zero_extendqisi2
 2749 131c 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2750 1320 7C104BE2 		sub	r1, fp, #124
 2751 1324 0100A0E1 		mov	r0, r1
 2752 1328 0210A0E1 		mov	r1, r2
 2753 132c 0320A0E1 		mov	r2, r3
 2754 1330 FEFFFFEB 		bl	actualizar_candidatas
 2755              	.L57:
 444:../reversi8_2018.c ****     while (fin == 0)
 2756              		.loc 1 444 0 discriminator 1
 2757 1334 34301BE5 		ldr	r3, [fp, #-52]
 2758 1338 000053E3 		cmp	r3, #0
 2759 133c A9FFFF0A 		beq	.L60
 470:../reversi8_2018.c ****         }
 471:../reversi8_2018.c ****     }
 472:../reversi8_2018.c ****     contar(tablero, &blancas, &negras);
 2760              		.loc 1 472 0
 2761 1340 80204BE2 		sub	r2, fp, #128
 2762 1344 84304BE2 		sub	r3, fp, #132
 2763 1348 18009FE5 		ldr	r0, .L61+4
 2764 134c 0210A0E1 		mov	r1, r2
 2765 1350 0320A0E1 		mov	r2, r3
 2766 1354 FEFFFFEB 		bl	contar
 473:../reversi8_2018.c **** }
 2767              		.loc 1 473 0
 2768 1358 28D04BE2 		sub	sp, fp, #40
 2769 135c F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 2770 1360 1EFF2FE1 		bx	lr
 2771              	.L62:
 2772              		.align	2
 2773              	.L61:
 2774 1364 00000000 		.word	NO
 2775 1368 00000000 		.word	tablero
 2776 136c 00000000 		.word	ready
 2777 1370 00000000 		.word	fila
 2778 1374 00000000 		.word	columna
 2779              		.cfi_endproc
 2780              	.LFE9:
 2782              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2018.c
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:976    .rodata:00000000 NO
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:977    .rodata:00000000 $d
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:981    .rodata:00000001 SI
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:986    .rodata:00000002 CASILLA_OCUPADA
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:991    .rodata:00000008 tabla_valor
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1060   .rodata:00000048 vSF
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1073   .rodata:00000050 vSC
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1087   .bss:00000000 tablero
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1084   .bss:00000000 $d
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1092   .bss:00000040 fila
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1097   .bss:00000041 columna
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1102   .bss:00000042 ready
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1105   .text:00000000 $a
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1108   .text:00000000 init_table
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1288   .text:0000020c $d
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1293   .text:00000214 $a
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1296   .text:00000214 esperar_mov
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1337   .text:00000254 ficha_valida
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1412   .text:00000308 patron_volteo
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1520   .text:0000041c voltear
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1585   .text:000004ac actualizar_tablero
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1676   .text:0000059c $d
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1681   .text:000005a4 $a
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1684   .text:000005a4 elegir_mov
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1871   .text:000007b0 $d
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1878   .text:000007c0 $a
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1881   .text:000007c0 contar
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:1983   .text:000008bc actualizar_candidatas
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:2246   .text:00000c0c $d
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:2251   .text:00000c14 $a
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:2254   .text:00000c14 reversi8
C:\Users\Ivo\AppData\Local\Temp\ccvs2oKz.s:2774   .text:00001364 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
leds_off
leds_on
