   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 1646              		.align	2
 1649              	Pacientes:
 1650 0000 7F000000 		.word	127
 1651 0004 01000000 		.word	1
 1652 0008 7F000000 		.word	127
 1653 000c 02000000 		.word	2
 1654 0010 70000000 		.word	112
 1655 0014 03000000 		.word	3
 1656 0018 64000000 		.word	100
 1657 001c 04000000 		.word	4
 1658 0020 84000000 		.word	132
 1659 0024 05000000 		.word	5
 1660 0028 88000000 		.word	136
 1661 002c 06000000 		.word	6
 1662 0030 FF000000 		.word	255
 1663 0034 07000000 		.word	7
 1664 0038 0A000000 		.word	10
 1665 003c 08000000 		.word	8
 1666 0040 00000000 		.word	0
 1667 0044 00000000 		.word	0
 1668 0048 00000000 		.space	56
 1668      00000000 
 1668      00000000 
 1668      00000000 
 1668      00000000 
 1669              		.comm	Seleccionadas,4,4
 1670              		.comm	nselec,4,4
 1671              		.text
 1672              		.align	2
 1673              		.global	NumPacientes
 1675              	NumPacientes:
 1676              	.LFB0:
   1:../main.c     **** #include <stdlib.h>
   2:../main.c     **** #define MAX_PACIENTES 16
   3:../main.c     **** 
   4:../main.c     **** struct Descriptor {
   5:../main.c     **** 	unsigned int prioridad;
   6:../main.c     **** 	unsigned int pid;
   7:../main.c     **** };
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** struct Descriptor Pacientes[MAX_PACIENTES] = { {127,1},{127,2},{112,3},{100,4},{132,5},{136,6},{255
  11:../main.c     **** 
  12:../main.c     **** struct Descriptor* Seleccionadas;
  13:../main.c     **** int nselec;
  14:../main.c     **** 
  15:../main.c     **** int NumPacientes(struct Descriptor* P)
  16:../main.c     **** {
 1677              		.loc 1 16 0
 1678              		.cfi_startproc
 1679              		@ Function supports interworking.
 1680              		@ args = 0, pretend = 0, frame = 16
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0000 0DC0A0E1 		mov	ip, sp
 1683              	.LCFI0:
 1684              		.cfi_def_cfa_register 12
 1685 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1686 0008 04B04CE2 		sub	fp, ip, #4
 1687              		.cfi_offset 14, -8
 1688              		.cfi_offset 13, -12
 1689              		.cfi_offset 11, -16
 1690              	.LCFI1:
 1691              		.cfi_def_cfa 11, 4
 1692 000c 10D04DE2 		sub	sp, sp, #16
 1693 0010 18000BE5 		str	r0, [fp, #-24]
  17:../main.c     **** 	int i;
  18:../main.c     **** 
  19:../main.c     **** 	for( i = 0; i < MAX_PACIENTES; i++ )
 1694              		.loc 1 19 0
 1695 0014 0030A0E3 		mov	r3, #0
 1696 0018 10300BE5 		str	r3, [fp, #-16]
 1697 001c 120000EA 		b	.L2
 1698              	.L5:
  20:../main.c     **** 		if( (P[i].prioridad == 0) && ( P[i].pid == 0 ) )
 1699              		.loc 1 20 0
 1700 0020 10301BE5 		ldr	r3, [fp, #-16]
 1701 0024 8331A0E1 		mov	r3, r3, asl #3
 1702 0028 18201BE5 		ldr	r2, [fp, #-24]
 1703 002c 033082E0 		add	r3, r2, r3
 1704 0030 003093E5 		ldr	r3, [r3, #0]
 1705 0034 000053E3 		cmp	r3, #0
 1706 0038 0800001A 		bne	.L3
 1707              		.loc 1 20 0 is_stmt 0 discriminator 1
 1708 003c 10301BE5 		ldr	r3, [fp, #-16]
 1709 0040 8331A0E1 		mov	r3, r3, asl #3
 1710 0044 18201BE5 		ldr	r2, [fp, #-24]
 1711 0048 033082E0 		add	r3, r2, r3
 1712 004c 043093E5 		ldr	r3, [r3, #4]
 1713 0050 000053E3 		cmp	r3, #0
 1714 0054 0100001A 		bne	.L3
  21:../main.c     **** 			return i;
 1715              		.loc 1 21 0 is_stmt 1
 1716 0058 10301BE5 		ldr	r3, [fp, #-16]
 1717 005c 060000EA 		b	.L4
 1718              	.L3:
  19:../main.c     **** 	for( i = 0; i < MAX_PACIENTES; i++ )
 1719              		.loc 1 19 0
 1720 0060 10301BE5 		ldr	r3, [fp, #-16]
 1721 0064 013083E2 		add	r3, r3, #1
 1722 0068 10300BE5 		str	r3, [fp, #-16]
 1723              	.L2:
  19:../main.c     **** 	for( i = 0; i < MAX_PACIENTES; i++ )
 1724              		.loc 1 19 0 is_stmt 0 discriminator 1
 1725 006c 10301BE5 		ldr	r3, [fp, #-16]
 1726 0070 0F0053E3 		cmp	r3, #15
 1727 0074 E9FFFFDA 		ble	.L5
  22:../main.c     **** 
  23:../main.c     **** 	return MAX_PACIENTES - 1;
 1728              		.loc 1 23 0 is_stmt 1
 1729 0078 0F30A0E3 		mov	r3, #15
 1730              	.L4:
  24:../main.c     **** }
 1731              		.loc 1 24 0
 1732 007c 0300A0E1 		mov	r0, r3
 1733 0080 0CD04BE2 		sub	sp, fp, #12
 1734 0084 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1735 0088 1EFF2FE1 		bx	lr
 1736              		.cfi_endproc
 1737              	.LFE0:
 1739              		.align	2
 1740              		.global	PosMinPrioridad
 1742              	PosMinPrioridad:
 1743              	.LFB1:
  25:../main.c     **** 
  26:../main.c     **** int PosMinPrioridad(struct Descriptor* P,int ini, int num)
  27:../main.c     **** {
 1744              		.loc 1 27 0
 1745              		.cfi_startproc
 1746              		@ Function supports interworking.
 1747              		@ args = 0, pretend = 0, frame = 32
 1748              		@ frame_needed = 1, uses_anonymous_args = 0
 1749 008c 0DC0A0E1 		mov	ip, sp
 1750              	.LCFI2:
 1751              		.cfi_def_cfa_register 12
 1752 0090 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1753 0094 04B04CE2 		sub	fp, ip, #4
 1754              		.cfi_offset 14, -8
 1755              		.cfi_offset 13, -12
 1756              		.cfi_offset 11, -16
 1757              	.LCFI3:
 1758              		.cfi_def_cfa 11, 4
 1759 0098 20D04DE2 		sub	sp, sp, #32
 1760 009c 20000BE5 		str	r0, [fp, #-32]
 1761 00a0 24100BE5 		str	r1, [fp, #-36]
 1762 00a4 28200BE5 		str	r2, [fp, #-40]
  28:../main.c     **** 	int minpos = ini;
 1763              		.loc 1 28 0
 1764 00a8 24301BE5 		ldr	r3, [fp, #-36]
 1765 00ac 10300BE5 		str	r3, [fp, #-16]
  29:../main.c     **** 	int min = P[ini].prioridad;
 1766              		.loc 1 29 0
 1767 00b0 24301BE5 		ldr	r3, [fp, #-36]
 1768 00b4 8331A0E1 		mov	r3, r3, asl #3
 1769 00b8 20201BE5 		ldr	r2, [fp, #-32]
 1770 00bc 033082E0 		add	r3, r2, r3
 1771 00c0 003093E5 		ldr	r3, [r3, #0]
 1772 00c4 14300BE5 		str	r3, [fp, #-20]
  30:../main.c     **** 	int i;
  31:../main.c     **** 
  32:../main.c     **** 	for( i = ini+1; i < num; i++)
 1773              		.loc 1 32 0
 1774 00c8 24301BE5 		ldr	r3, [fp, #-36]
 1775 00cc 013083E2 		add	r3, r3, #1
 1776 00d0 18300BE5 		str	r3, [fp, #-24]
 1777 00d4 120000EA 		b	.L7
 1778              	.L9:
  33:../main.c     **** 		if( P[i].prioridad < min ){
 1779              		.loc 1 33 0
 1780 00d8 18301BE5 		ldr	r3, [fp, #-24]
 1781 00dc 8331A0E1 		mov	r3, r3, asl #3
 1782 00e0 20201BE5 		ldr	r2, [fp, #-32]
 1783 00e4 033082E0 		add	r3, r2, r3
 1784 00e8 002093E5 		ldr	r2, [r3, #0]
 1785 00ec 14301BE5 		ldr	r3, [fp, #-20]
 1786 00f0 030052E1 		cmp	r2, r3
 1787 00f4 0700002A 		bcs	.L8
  34:../main.c     **** 		   minpos = i;	
 1788              		.loc 1 34 0
 1789 00f8 18301BE5 		ldr	r3, [fp, #-24]
 1790 00fc 10300BE5 		str	r3, [fp, #-16]
  35:../main.c     **** 		   min = P[i].prioridad;
 1791              		.loc 1 35 0
 1792 0100 18301BE5 		ldr	r3, [fp, #-24]
 1793 0104 8331A0E1 		mov	r3, r3, asl #3
 1794 0108 20201BE5 		ldr	r2, [fp, #-32]
 1795 010c 033082E0 		add	r3, r2, r3
 1796 0110 003093E5 		ldr	r3, [r3, #0]
 1797 0114 14300BE5 		str	r3, [fp, #-20]
 1798              	.L8:
  32:../main.c     **** 	for( i = ini+1; i < num; i++)
 1799              		.loc 1 32 0
 1800 0118 18301BE5 		ldr	r3, [fp, #-24]
 1801 011c 013083E2 		add	r3, r3, #1
 1802 0120 18300BE5 		str	r3, [fp, #-24]
 1803              	.L7:
  32:../main.c     **** 	for( i = ini+1; i < num; i++)
 1804              		.loc 1 32 0 is_stmt 0 discriminator 1
 1805 0124 18201BE5 		ldr	r2, [fp, #-24]
 1806 0128 28301BE5 		ldr	r3, [fp, #-40]
 1807 012c 030052E1 		cmp	r2, r3
 1808 0130 E8FFFFBA 		blt	.L9
  36:../main.c     **** 		}
  37:../main.c     **** 
  38:../main.c     **** 	return minpos;
 1809              		.loc 1 38 0 is_stmt 1
 1810 0134 10301BE5 		ldr	r3, [fp, #-16]
  39:../main.c     **** }
 1811              		.loc 1 39 0
 1812 0138 0300A0E1 		mov	r0, r3
 1813 013c 0CD04BE2 		sub	sp, fp, #12
 1814 0140 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1815 0144 1EFF2FE1 		bx	lr
 1816              		.cfi_endproc
 1817              	.LFE1:
 1819              		.align	2
 1820              		.global	main
 1822              	main:
 1823              	.LFB2:
  40:../main.c     **** 
  41:../main.c     **** //Se da en ensamblador y se pide implementar en C
  42:../main.c     **** void Intercambiar(struct Descriptor* P, int i, int j);
  43:../main.c     **** /*
  44:../main.c     **** {
  45:../main.c     **** 	struct Descriptor aux;
  46:../main.c     **** 
  47:../main.c     **** 	aux.prioridad = P[i].prioridad;
  48:../main.c     **** 	aux.pid = P[i].pid;
  49:../main.c     **** 
  50:../main.c     **** 	P[i].prioridad = P[j].prioridad;
  51:../main.c     **** 	P[i].pid = P[j].pid;
  52:../main.c     **** 
  53:../main.c     **** 	P[j].prioridad = aux.prioridad;
  54:../main.c     **** 	P[j].pid = aux.pid;
  55:../main.c     **** }
  56:../main.c     **** */
  57:../main.c     **** 
  58:../main.c     **** //Se da en C y se pide implementar en ensamblador
  59:../main.c     **** void OrdenaPorPrioridad(struct Descriptor*  A, int num);
  60:../main.c     **** /*
  61:../main.c     **** {
  62:../main.c     **** 	int i,j;
  63:../main.c     **** 
  64:../main.c     **** 	for( i = 0; i < num ; i++ )
  65:../main.c     **** 	{
  66:../main.c     **** 		j = PosMinPrioridad(A,i,num);	
  67:../main.c     **** 		Intercambiar(A,i,j);
  68:../main.c     **** 	}
  69:../main.c     **** }
  70:../main.c     **** */
  71:../main.c     **** 
  72:../main.c     **** // Describir y que se implemente en ensamblador
  73:../main.c     **** struct Descriptor* SeleccionarPID(struct Descriptor* P, int num, int* nselec, int prio );
  74:../main.c     **** /*
  75:../main.c     **** {
  76:../main.c     **** 	int i=0;
  77:../main.c     **** 
  78:../main.c     **** 	while( (P[i].prioridad < prio) && (i < num) ) i++;
  79:../main.c     **** 
  80:../main.c     **** 	*nselec = num-i;
  81:../main.c     **** 	
  82:../main.c     **** 	if( i == num ) return NULL;
  83:../main.c     **** 	else return &(P[i]);
  84:../main.c     **** }
  85:../main.c     **** */
  86:../main.c     **** 
  87:../main.c     **** int main(void)
  88:../main.c     **** {
 1824              		.loc 1 88 0
 1825              		.cfi_startproc
 1826              		@ Function supports interworking.
 1827              		@ args = 0, pretend = 0, frame = 8
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829 0148 0DC0A0E1 		mov	ip, sp
 1830              	.LCFI4:
 1831              		.cfi_def_cfa_register 12
 1832 014c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1833 0150 04B04CE2 		sub	fp, ip, #4
 1834              		.cfi_offset 14, -8
 1835              		.cfi_offset 13, -12
 1836              		.cfi_offset 11, -16
 1837              	.LCFI5:
 1838              		.cfi_def_cfa 11, 4
 1839 0154 08D04DE2 		sub	sp, sp, #8
  89:../main.c     **** 	int num;
  90:../main.c     **** 
  91:../main.c     **** 	num = NumPacientes(Pacientes);
 1840              		.loc 1 91 0
 1841 0158 44009FE5 		ldr	r0, .L11
 1842 015c FEFFFFEB 		bl	NumPacientes
 1843 0160 10000BE5 		str	r0, [fp, #-16]
  92:../main.c     **** 
  93:../main.c     **** 	OrdenaPorPrioridad( Pacientes, num );
 1844              		.loc 1 93 0
 1845 0164 38009FE5 		ldr	r0, .L11
 1846 0168 10101BE5 		ldr	r1, [fp, #-16]
 1847 016c FEFFFFEB 		bl	OrdenaPorPrioridad
  94:../main.c     **** 
  95:../main.c     **** 	Seleccionadas = SeleccionarPID( Pacientes, num, &nselec, 127 );
 1848              		.loc 1 95 0
 1849 0170 2C009FE5 		ldr	r0, .L11
 1850 0174 10101BE5 		ldr	r1, [fp, #-16]
 1851 0178 28209FE5 		ldr	r2, .L11+4
 1852 017c 7F30A0E3 		mov	r3, #127
 1853 0180 FEFFFFEB 		bl	SeleccionarPID
 1854 0184 0020A0E1 		mov	r2, r0
 1855 0188 1C309FE5 		ldr	r3, .L11+8
 1856 018c 002083E5 		str	r2, [r3, #0]
  96:../main.c     **** 			
  97:../main.c     **** 	return 0;
 1857              		.loc 1 97 0
 1858 0190 0030A0E3 		mov	r3, #0
  98:../main.c     **** }
 1859              		.loc 1 98 0
 1860 0194 0300A0E1 		mov	r0, r3
 1861 0198 0CD04BE2 		sub	sp, fp, #12
 1862 019c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1863 01a0 1EFF2FE1 		bx	lr
 1864              	.L12:
 1865              		.align	2
 1866              	.L11:
 1867 01a4 00000000 		.word	Pacientes
 1868 01a8 00000000 		.word	nselec
 1869 01ac 00000000 		.word	Seleccionadas
 1870              		.cfi_endproc
 1871              	.LFE2:
 1873              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1649   .data:00000000 Pacientes
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1646   .data:00000000 $d
                            *COM*:00000004 Seleccionadas
                            *COM*:00000004 nselec
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1672   .text:00000000 $a
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1675   .text:00000000 NumPacientes
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1742   .text:0000008c PosMinPrioridad
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1822   .text:00000148 main
C:\Users\Ivo\AppData\Local\Temp\ccCmgAnn.s:1867   .text:000001a4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
OrdenaPorPrioridad
SeleccionarPID
